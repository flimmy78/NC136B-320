###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       28/Dec/2017  08:42:36
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-320 IC卡模块\Software\APP\Tasks\app_task_osal_led.c
#    Command line =  
#        "F:\iar\NC136B-320 IC卡模块\Software\APP\Tasks\app_task_osal_led.c" -D
#        RELEASE -lCN "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\List\"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -On --use_c++_inline
#    List file    =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\List\app_task_osal_led.lst
#    Object file  =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\Obj\app_task_osal_led.o
#
###############################################################################

F:\iar\NC136B-320 IC卡模块\Software\APP\Tasks\app_task_osal_led.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_led.c
      3           *   Revised:        All copyrights reserved to redmorningcn.
      4           *   Revision:       v1.0
      5           *   Writer:	     redmoringcn.
      6           *
      7           *   Description:    双击选中 led 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Led 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 LED 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_LED_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_LED_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskLedCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Led ）
     17           *
     18           *   Notes:
     19           *     				E-mail: redmorningcn@qq.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          //#include <iap.h>
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_task_led__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_LED_EN     DEF_ENABLED
     37          #if APP_TASK_LED_EN == DEF_ENABLED
     38          /*******************************************************************************
     39           * CONSTANTS
     40           */
     41          #define CYCLE_TIME_TICKS     (OS_CFG_TICK_RATE_HZ * 2u)
     42          
     43          /*******************************************************************************
     44           * MACROS
     45           */
     46          //#define     BSP_LED_NUM         8
     47          ////LED点亮次数 
     48          //#define     LED_TOGGLE_CNT      15
     49          
     50          
     51          /*******************************************************************************
     52           * TYPEDEFS
     53           */
     54          
     55          /*******************************************************************************
     56           * LOCAL VARIABLES
     57           */
     58          //
     59          //uint8   LedWorkTimes[BSP_LED_NUM + 1] = 0;
     60          
     61          #if ( OSAL_EN == DEF_ENABLED )
     62          #else
     63          /***********************************************
     64          * 描述： 任务控制块（TCB）
     65          */
     66          static  OS_TCB   AppTaskLedTCB;
     67          
     68          /***********************************************
     69          * 描述： 任务堆栈（STACKS）
     70          */
     71          //static  CPU_STK  AppTaskLedStk[ APP_TASK_LED_STK_SIZE ];
     72          
     73          #endif
     74          /*******************************************************************************
     75           * GLOBAL VARIABLES
     76           */
     77          
     78          /*******************************************************************************
     79           * LOCAL FUNCTIONS
     80           */
     81          #if ( OSAL_EN == DEF_ENABLED )
     82          #else
     83          static  void    AppTaskLed           (void *p_arg);
     84          #endif
     85          
     86          /*******************************************************************************
     87           * GLOBAL FUNCTIONS
     88           */
     89          
     90          /*******************************************************************************
     91           * EXTERN VARIABLES
     92           */
     93          
     94          /*******************************************************************************/
     95          
     96          
     97          /*******************************************************************************
     98           * 名    称： AppTaskLed
     99           * 功    能： 控制任务
    100           * 入口参数： p_arg - 由任务创建函数传入
    101           * 出口参数： 无
    102           * 作　 　者： wumingshen.
    103           * 创建日期： 2015-02-05
    104           * 修    改：
    105           * 修改日期：
    106           *******************************************************************************/
    107          

   \                                 In section .text, align 2, keep-with-next
    108          osalEvt  TaskLedEvtProcess(INT8U task_id, osalEvt task_event)
    109          {    
   \                     TaskLedEvtProcess: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    110              /***********************************************
    111              * 描述： 本任务看门狗标志置位
    112              */
    113              OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_LED);
   \   00000006   0x2020             MOVS     R0,#+32
   \   00000008   0x.... 0x....      BL       OSSetWdtFlag
    114              
    115              if( task_event & OS_EVT_LED_TICKS ) {
   \   0000000C   0x07E8             LSLS     R0,R5,#+31
   \   0000000E   0xD536             BPL.N    ??TaskLedEvtProcess_0
    116                  static  uint8   mode = 0;
    117                  static  uint8   dlytimes = 0;
    118                  /***********************************************
    119                  * 描述： 开机显示
    120                  */
    121                  while(mode < 5) {
   \   00000010   0x....             LDR.N    R0,??DataTable0
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2805             CMP      R0,#+5
   \   00000016   0xDA12             BGE.N    ??TaskLedEvtProcess_1
    122                      mode++;
   \   00000018   0x....             LDR.N    R0,??DataTable0
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x1C40             ADDS     R0,R0,#+1
   \   0000001E   0x....             LDR.N    R1,??DataTable0
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    123                      
    124                      BSP_LED_Toggle(7);                          //对应指示灯点亮
   \   00000022   0x2007             MOVS     R0,#+7
   \   00000024   0x.... 0x....      BL       BSP_LED_Toggle
    125                      BSP_LED_Toggle(8);
   \   00000028   0x2008             MOVS     R0,#+8
   \   0000002A   0x.... 0x....      BL       BSP_LED_Toggle
    126                      
    127                      osal_start_timerEx( OS_TASK_ID_LED,
    128                                         OS_EVT_LED_TICKS,
    129                                         200);
   \   0000002E   0x22C8             MOVS     R2,#+200
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x2006             MOVS     R0,#+6
   \   00000034   0x.... 0x....      BL       osal_start_timerEx
    130                      return ( task_event ^ OS_EVT_LED_TICKS );
   \   00000038   0xF095 0x0001      EORS     R0,R5,#0x1
   \   0000003C   0xE020             B.N      ??TaskLedEvtProcess_2
    131                  }
    132                  
    133                  /***********************************************
    134                  * 描述： 运行指示灯
    135                  */
    136                  
    137                  //if(Ctrl.sRunPara.plugcard == 1){
    138                  //    BSP_LED_Toggle(7);  //对应指示灯点亮
    139                  //}else {
    140                  //    BSP_LED_Off(7);
    141                  //}
    142                  
    143                  if(Ctrl.Otr.ConnCtrl[0].ErrFlg == 0){  //通讯正常，快闪0.1s
   \                     ??TaskLedEvtProcess_1: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable0_1
   \   00000040   0xF890 0x020B      LDRB     R0,[R0, #+523]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD103             BNE.N    ??TaskLedEvtProcess_3
    144                      BSP_LED_Toggle(8);
   \   00000048   0x2008             MOVS     R0,#+8
   \   0000004A   0x.... 0x....      BL       BSP_LED_Toggle
   \   0000004E   0xE00E             B.N      ??TaskLedEvtProcess_4
    145                  } else {
    146                      dlytimes++;
   \                     ??TaskLedEvtProcess_3: (+1)
   \   00000050   0x....             LDR.N    R0,??DataTable0_2
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0x....             LDR.N    R1,??DataTable0_2
   \   00000058   0x7008             STRB     R0,[R1, #+0]
    147                      if(dlytimes > 5){   
   \   0000005A   0x....             LDR.N    R0,??DataTable0_2
   \   0000005C   0x7800             LDRB     R0,[R0, #+0]
   \   0000005E   0x2806             CMP      R0,#+6
   \   00000060   0xDB05             BLT.N    ??TaskLedEvtProcess_4
    148                          BSP_LED_Toggle(8);              //通讯异常，慢闪0.5s
   \   00000062   0x2008             MOVS     R0,#+8
   \   00000064   0x.... 0x....      BL       BSP_LED_Toggle
    149                          dlytimes = 0;
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x....             LDR.N    R1,??DataTable0_2
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
    150                      }
    151                  }        
    152                  
    153                  /***********************************************
    154                  * 描述： 定时器重启
    155                  */
    156                  osal_start_timerEx( OS_TASK_ID_LED,
    157                                     OS_EVT_LED_TICKS,
    158                                     50);
   \                     ??TaskLedEvtProcess_4: (+1)
   \   0000006E   0x2232             MOVS     R2,#+50
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0x2006             MOVS     R0,#+6
   \   00000074   0x.... 0x....      BL       osal_start_timerEx
    159                  
    160                  return ( task_event ^ OS_EVT_LED_TICKS );
   \   00000078   0xF095 0x0001      EORS     R0,R5,#0x1
   \   0000007C   0xE000             B.N      ??TaskLedEvtProcess_2
    161              }
    162              
    163              return  0;
   \                     ??TaskLedEvtProcess_0: (+1)
   \   0000007E   0x2000             MOVS     R0,#+0
   \                     ??TaskLedEvtProcess_2: (+1)
   \   00000080   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    164          }

   \                                 In section .bss, align 1
   \                     ??mode:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??dlytimes:
   \   00000000                      DS8 1
    165          
    166          
    167          /*******************************************************************************
    168           * 名    称：APP_LedInit
    169           * 功    能：任务初始化
    170           * 入口参数：无
    171           * 出口参数：无
    172           * 作　 　者：redmorningcn.
    173           * 创建日期：2017-05-15
    174           * 修    改：
    175           * 修改日期：
    176           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    177          void TaskInitLed(void)
    178          {    
   \                     TaskInitLed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    179              /***********************************************
    180              * 描述： 在看门狗标志组注册本任务的看门狗标志
    181              */
    182              OSRegWdtFlag(( OS_FLAGS     )WDT_FLAG_LED );
   \   00000002   0x2020             MOVS     R0,#+32
   \   00000004   0x.... 0x....      BL       OSRegWdtFlag
    183              
    184              osal_start_timerEx( OS_TASK_ID_LED,
    185                                  OS_EVT_LED_TICKS,
    186                                  1000);
   \   00000008   0xF44F 0x727A      MOV      R2,#+1000
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x2006             MOVS     R0,#+6
   \   00000010   0x.... 0x....      BL       osal_start_timerEx
    187          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     ??mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     ??dlytimes
    188          
    189          /*******************************************************************************
    190           * 				                    end of file                                *
    191           *******************************************************************************/
    192          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TaskInitLed
         8   -> OSRegWdtFlag
         8   -> osal_start_timerEx
      16   TaskLedEvtProcess
        16   -> BSP_LED_Toggle
        16   -> OSSetWdtFlag
        16   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
      22  TaskInitLed
     130  TaskLedEvtProcess
       1  dlytimes
       1  mode

 
   2 bytes in section .bss
 164 bytes in section .text
 
 164 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
