###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       28/Dec/2017  08:42:36
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-320 IC卡模块\Software\APP\Tasks\app_task_osal_tmr.c
#    Command line =  
#        "F:\iar\NC136B-320 IC卡模块\Software\APP\Tasks\app_task_osal_tmr.c" -D
#        RELEASE -lCN "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\List\"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -On --use_c++_inline
#    List file    =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\List\app_task_osal_tmr.lst
#    Object file  =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\Obj\app_task_osal_tmr.o
#
###############################################################################

F:\iar\NC136B-320 IC卡模块\Software\APP\Tasks\app_task_osal_tmr.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_tmr.c
      3           *   Revised:        All copyrights reserved to wumingshen.
      4           *   Revision:       v1.0
      5           *   Writer:	     wumingshen.
      6           *
      7           *   Description:    双击选中 tmr 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Tmr 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 TMR 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_TMR_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_TMR_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskTmrCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Tmr ）
     17           *
     18           *   Notes:
     19           *     				E-mail: shenchangwei945@163.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include "DS3231.h"
     29          #include "app.h"
     30          #include "bsp_timer.h"
     31          #include "os_cfg_app.h"
     32          #include <app_ctrl.h>
     33          
     34          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     35          const  CPU_CHAR  *app_task_tmr__c = "$Id: $";
     36          #endif
     37          
     38          #define APP_TASK_TMR_EN     DEF_ENABLED
     39          #if APP_TASK_TMR_EN == DEF_ENABLED
     40          /*******************************************************************************
     41           * CONSTANTS
     42           */
     43          #define CYCLE_TIME_TICKS            (OS_CFG_TICK_RATE_HZ * 1u)
     44          #define CYCLE_SAMPLE_MSEC_TICKS     (OS_CFG_TICK_RATE_HZ / 5)
     45          #define CYCLE_SAMPLE_SEC_TICKS      (OS_CFG_TICK_RATE_HZ * 5u)
     46          #define CYCLE_SAMPLE_MIN_TICKS      (OS_CFG_TICK_RATE_HZ * 60u)
     47          #define CYCLE_SAMPLE_TICKS          (OS_CFG_TICK_RATE_HZ * 2u)
     48               
     49          /*******************************************************************************
     50           * MACROS
     51           */
     52          
     53          /*******************************************************************************
     54           * TYPEDEFS
     55           */
     56          
     57          /*******************************************************************************
     58           * LOCAL VARIABLES
     59           */
     60          
     61          #if ( OSAL_EN == DEF_ENABLED )
     62          #else
     63          /***********************************************
     64          * 描述： 任务控制块（TCB）
     65          */
     66          static  OS_TCB   AppTaskTmrTCB;
     67          
     68          /***********************************************
     69          * 描述： 任务堆栈（STACKS）
     70          */
     71          static  CPU_STK  AppTaskTmrStk[ APP_TASK_TMR_STK_SIZE ];
     72          
     73          #endif
     74          /*******************************************************************************
     75           * GLOBAL VARIABLES
     76           */
     77          
     78          /*******************************************************************************
     79           * LOCAL FUNCTIONS
     80           */
     81          
     82          /*******************************************************************************
     83           * GLOBAL FUNCTIONS
     84           */
     85          
     86          /*******************************************************************************
     87           * EXTERN VARIABLES
     88           */
     89          
     90          /*******************************************************************************/
     91          extern  OS_SEM	Bsp_Card_Sem; 
     92          uint8_t ReadIC_SWT(void);
     93          
     94          
     95          /*******************************************************************************
     96           * 名    称： AppTaskTmr
     97           * 功    能： 控制任务
     98           * 入口参数： p_arg - 由任务创建函数传入
     99           * 出口参数： 无
    100           * 作　 　者： wumingshen.
    101           * 创建日期： 2015-02-05
    102           * 修    改：
    103           * 修改日期：
    104           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    105          osalEvt  TaskTmrEvtProcess(INT8U task_id, osalEvt task_event)
    106          {
   \                     TaskTmrEvtProcess: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    107              OS_ERR      err;
    108              
    109              /***********************************************
    110              * 描述： 本任务看门狗标志置位
    111              */
    112              OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_TMR);   
   \   00000006   0x2004             MOVS     R0,#+4
   \   00000008   0x.... 0x....      BL       OSSetWdtFlag
    113              
    114              /***************************************************************************
    115              * 描述： 统计模块和无线发送模块通讯定时器，
    116              COMM_EVT_FLAG_DTU_TIMEOUT 标示。
    117              */    
    118              if( task_event & OS_EVT_TMR_SEC ) {
   \   0000000C   0x0768             LSLS     R0,R5,#+29
   \   0000000E   0xD542             BPL.N    ??TaskTmrEvtProcess_0
    119                  static  uint8   mPlugTime = 0;
    120                  static  uint8   mNoPlugTime = 0;
    121                  
    122                  //无卡状态下，插入IC卡
    123                  //无卡状态下，插入IC卡卡，发送信号量
    124                  if(ReadIC_SWT() == 1 && Ctrl.sRunPara.plugcard == 0) {
   \   00000010   0x.... 0x....      BL       ReadIC_SWT
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD11D             BNE.N    ??TaskTmrEvtProcess_1
   \   00000018   0x....             LDR.N    R0,??DataTable0
   \   0000001A   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   0000001E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD116             BNE.N    ??TaskTmrEvtProcess_1
    125          	        if( mPlugTime++ > 2) {
   \   00000026   0x....             LDR.N    R0,??DataTable0_1
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x1C41             ADDS     R1,R0,#+1
   \   0000002C   0x....             LDR.N    R2,??DataTable0_1
   \   0000002E   0x7011             STRB     R1,[R2, #+0]
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x2803             CMP      R0,#+3
   \   00000034   0xDB2C             BLT.N    ??TaskTmrEvtProcess_2
    126          	            Ctrl.sRunPara.plugcard = 1;
   \   00000036   0x....             LDR.N    R0,??DataTable0
   \   00000038   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   0000003C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000040   0x....             LDR.N    R1,??DataTable0
   \   00000042   0xF881 0x00AD      STRB     R0,[R1, #+173]
    127          				//发送信号量，启动 IC卡任务  
    128          				BSP_OS_SemPost(&Bsp_Card_Sem);
   \   00000046   0x....             LDR.N    R0,??DataTable0_2
   \   00000048   0x.... 0x....      BL       BSP_OS_SemPost
    129                          
    130          	            mNoPlugTime = 0;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR.N    R1,??DataTable0_3
   \   00000050   0x7008             STRB     R0,[R1, #+0]
   \   00000052   0xE01D             B.N      ??TaskTmrEvtProcess_2
    131          	        }
    132                  //有卡状态，且已经拔出IC卡   
    133          		} else if ( ReadIC_SWT() == 0 &&  Ctrl.sRunPara.plugcard == 1) {   
   \                     ??TaskTmrEvtProcess_1: (+1)
   \   00000054   0x.... 0x....      BL       ReadIC_SWT
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xD119             BNE.N    ??TaskTmrEvtProcess_2
   \   0000005C   0x....             LDR.N    R0,??DataTable0
   \   0000005E   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   00000062   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD012             BEQ.N    ??TaskTmrEvtProcess_2
    134          	        if( mNoPlugTime++ > 2) {
   \   0000006A   0x....             LDR.N    R0,??DataTable0_3
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x1C41             ADDS     R1,R0,#+1
   \   00000070   0x....             LDR.N    R2,??DataTable0_3
   \   00000072   0x7011             STRB     R1,[R2, #+0]
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x2803             CMP      R0,#+3
   \   00000078   0xDB0A             BLT.N    ??TaskTmrEvtProcess_2
    135          	            Ctrl.sRunPara.plugcard = 0;                
   \   0000007A   0x....             LDR.N    R0,??DataTable0
   \   0000007C   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   00000080   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   00000084   0x....             LDR.N    R1,??DataTable0
   \   00000086   0xF881 0x00AD      STRB     R0,[R1, #+173]
    136          	            mPlugTime = 0;
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x....             LDR.N    R1,??DataTable0_1
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    137          	        }
    138          	    }
    139                  
    140                  return ( task_event ^ OS_EVT_TMR_SEC );
   \                     ??TaskTmrEvtProcess_2: (+1)
   \   00000090   0xF095 0x0004      EORS     R0,R5,#0x4
   \   00000094   0xE000             B.N      ??TaskTmrEvtProcess_3
    141              }
    142              
    143              return 0;
   \                     ??TaskTmrEvtProcess_0: (+1)
   \   00000096   0x2000             MOVS     R0,#+0
   \                     ??TaskTmrEvtProcess_3: (+1)
   \   00000098   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    144          }

   \                                 In section .bss, align 1
   \                     ??mPlugTime:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??mNoPlugTime:
   \   00000000                      DS8 1
    145          
    146          /*******************************************************************************
    147           * 名    称： APP_TmrInit
    148           * 功    能： 任务初始化
    149           * 入口参数： 无
    150           * 出口参数： 无
    151           * 作　　者： wumingshen.
    152           * 创建日期： 2015-03-28
    153           * 修    改：
    154           * 修改日期：
    155           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    156          void TaskInitTmr(void)
    157          {
    158              /***********************************************
    159              * 描述： 在看门狗标志组注册本任务的看门狗标志
    160              */
    161              //OSRegWdtFlag(( OS_FLAGS     )WDT_FLAG_TMR );
    162              /*************************************************
    163              * 描述：启动事件查询
    164              */
    165              //osal_start_timerRl( OS_TASK_ID_TMR, OS_EVT_TMR_SEC, OS_TICKS_PER_SEC/10);
    166          }
   \                     TaskInitTmr: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     ??mPlugTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     Bsp_Card_Sem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     ??mNoPlugTime
    167          
    168          /*******************************************************************************
    169           * 				                    end of file                                *
    170           *******************************************************************************/
    171          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   TaskInitTmr
      16   TaskTmrEvtProcess
        16   -> BSP_OS_SemPost
        16   -> OSSetWdtFlag
        16   -> ReadIC_SWT


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       2  TaskInitTmr
     154  TaskTmrEvtProcess
       1  mNoPlugTime
       1  mPlugTime

 
   2 bytes in section .bss
 172 bytes in section .text
 
 172 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: 1
