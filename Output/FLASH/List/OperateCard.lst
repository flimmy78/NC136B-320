###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       28/Dec/2017  08:42:41
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-320
#        IC卡模块\Application\Library\CardOperations\OperateCard.c
#    Command line =  
#        "F:\iar\NC136B-320
#        IC卡模块\Application\Library\CardOperations\OperateCard.c" -D RELEASE
#        -lCN "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\List\"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -On --use_c++_inline
#    List file    =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\List\OperateCard.lst
#    Object file  =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Output\FLASH\Obj\OperateCard.o
#
###############################################################################

F:\iar\NC136B-320 IC卡模块\Application\Library\CardOperations\OperateCard.c
      1          #include    "includes.h"  
      2          #include	"Card.h"
      3          #include	"OperateCard.h"
      4          #include	"CardDataTypeDef.h"
      5          #include	"IdDataTypeDef.h"
      6          #include 	<idDataTypeDef.h>
      7          #include	"FRAM.h"
      8          #include	"app_ctrl.h"
      9          
     10          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC / 10)
     11          //

   \                                 In section .bss, align 2
     12          uint16	l_CardType;
   \                     l_CardType:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     13          uint8	l_FlgZoneErrEvent	= NO_OCCUR;
   \                     l_FlgZoneErrEvent:
   \   00000000                      DS8 1
     14          
     15          /***********************************************
     16          * 描述： 任务控制块（TCB）
     17          */

   \                                 In section .bss, align 4
     18          static  OS_TCB   AppTaskCardTCB;
   \                     AppTaskCardTCB:
   \   00000000                      DS8 160
     19          
     20          /***********************************************
     21          * 描述： 任务堆栈（STACKS）
     22          */

   \                                 In section .bss, align 4
     23          static  CPU_STK  AppTaskCardStk[ APP_TASK_CARD_STK_SIZE ];
   \                     AppTaskCardStk:
   \   00000000                      DS8 2048
     24          void    AppTaskCard(void);  
     25          
     26          
     27          /*******************************************************************************
     28           * 名    称： App_TaskCardCreate
     29           * 功    能： **任务创建
     30           * 入口参数： 无
     31           * 出口参数： 无
     32           * 作　 　者： redmorningcn.
     33           * 创建日期： 2017-06-01
     34           * 修    改：
     35           * 修改日期：
     36           * 备    注： 任务创建函数需要在app.h文件中声明
     37           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     38          void  App_TaskCardCreate(void)
     39          {
   \                     App_TaskCardCreate: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     40              OS_ERR  err;
     41          
     42              /***********************************************
     43              * 描述： 任务创建
     44              */
     45              OSTaskCreate((OS_TCB     *)&AppTaskCardTCB,                     // 任务控制块  （当前文件中定义）
     46                           (CPU_CHAR   *)"App Task Card",                     // 任务名称
     47                           (OS_TASK_PTR ) AppTaskCard,                        // 任务函数指针（当前文件中定义）
     48                           (void       *) 0,                                  // 任务函数参数
     49                           (OS_PRIO     ) APP_TASK_CARD_PRIO,                 // 任务优先级，不同任务优先级可以相同，0 < 优先级 < OS_CFG_PRIO_MAX - 2（app_cfg.h中定义）
     50                           (CPU_STK    *)&AppTaskCardStk[0],                  // 任务栈顶
     51                           (CPU_STK_SIZE) APP_TASK_CARD_STK_SIZE / 10,        // 任务栈溢出报警值
     52                           (CPU_STK_SIZE) APP_TASK_CARD_STK_SIZE,             // 任务栈大小（CPU数据宽度 * 8 * size = 4 * 8 * size(字节)）（app_cfg.h中定义）
     53                           (OS_MSG_QTY  ) 0u,                                 // 可以发送给任务的最大消息队列数量
     54                           (OS_TICK     ) 0u,                                 // 相同优先级任务的轮循时间（ms），0为默认
     55                           (void       *) 0,                                  // 是一个指向它被用作一个TCB扩展用户提供的存储器位置
     56                           (OS_OPT      )(OS_OPT_TASK_STK_CHK |               // 允许堆栈检查该任务
     57                                          OS_OPT_TASK_STK_CLR),               // 创建任务时堆栈清零
     58                           (OS_ERR     *)&err);                               // 指向错误代码的指针，用于创建结果处理
   \   00000004   0xA809             ADD      R0,SP,#+36
   \   00000006   0x9008             STR      R0,[SP, #+32]
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0x9007             STR      R0,[SP, #+28]
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x9006             STR      R0,[SP, #+24]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x9005             STR      R0,[SP, #+20]
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x9004             STR      R0,[SP, #+16]
   \   00000018   0xF44F 0x7000      MOV      R0,#+512
   \   0000001C   0x9003             STR      R0,[SP, #+12]
   \   0000001E   0x2033             MOVS     R0,#+51
   \   00000020   0x9002             STR      R0,[SP, #+8]
   \   00000022   0x....             LDR.N    R0,??DataTable3
   \   00000024   0x9001             STR      R0,[SP, #+4]
   \   00000026   0x2019             MOVS     R0,#+25
   \   00000028   0x9000             STR      R0,[SP, #+0]
   \   0000002A   0x2300             MOVS     R3,#+0
   \   0000002C   0x.... 0x....      ADR.W    R2,AppTaskCard
   \   00000030   0x....             LDR.N    R1,??DataTable3_1
   \   00000032   0x....             LDR.N    R0,??DataTable3_2
   \   00000034   0x.... 0x....      BL       OSTaskCreate
     59          
     60          }
   \   00000038   0xB00B             ADD      SP,SP,#+44
   \   0000003A   0xBD00             POP      {PC}             ;; return
     61          
     62          /*******************************************************************************
     63           * 名    称： 首字母大写
     64           * 功    能： 
     65           * 入口参数： 无
     66           * 出口参数： 无
     67           * 作    者： 无名沈
     68           * 创建日期： 2017/12/27
     69           * 修    改： 
     70           * 修改日期： 
     71           * 备    注： 
     72           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     73          uint8	ReadCardFlg(void)
     74          {	
   \                     ReadCardFlg: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     75          	stcCardType		sCardType;
     76              
     77          	ReadCard(CARD_FLG_ADDR+sizeof(stcCardID),(uint8 *)&sCardType,sizeof(stcCardType));		
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x4669             MOV      R1,SP
   \   00000008   0x2020             MOVS     R0,#+32
   \   0000000A   0x.... 0x....      BL       ReadCard
     78          	
     79          	if(     (sCardType.CardType[0] == sCardType.CardType[1]) 
     80                 && 	(sCardType.CardType[1] == sCardType.CardType[2])
     81                     &&	(sCardType.CrcCheck == 
     82                           GetCrc16Check((uint8 *)&sCardType,sizeof(sCardType) -2))
     83                         )
   \   0000000E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000012   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xD117             BNE.N    ??ReadCardFlg_0
   \   0000001A   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000001E   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD111             BNE.N    ??ReadCardFlg_0
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x.... 0x....      BL       GetCrc16Check
   \   0000002E   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   00000032   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000034   0x4281             CMP      R1,R0
   \   00000036   0xD108             BNE.N    ??ReadCardFlg_0
     84          	{
     85          		l_CardType 		= sCardType.CardType[0];			//IC卡 类型
   \   00000038   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000003C   0x....             LDR.N    R1,??DataTable3_3
   \   0000003E   0x8008             STRH     R0,[R1, #+0]
     86          		
     87          		l_FlgZoneErrEvent = NO_OCCUR;								//IC卡 标识页错误事件
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable3_4
   \   00000044   0x7008             STRB     R0,[R1, #+0]
     88          		
     89          		//PrintfDebug("\r\n l_CardType %d",l_CardType);
     90          		
     91          		return 	1;
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0xE006             B.N      ??ReadCardFlg_1
     92          	}
     93          	else
     94          	{
     95          		l_FlgZoneErrEvent = OCCUR;
   \                     ??ReadCardFlg_0: (+1)
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x....             LDR.N    R1,??DataTable3_4
   \   0000004E   0x7008             STRB     R0,[R1, #+0]
     96          		l_CardType = 0x0000;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x....             LDR.N    R1,??DataTable3_3
   \   00000054   0x8008             STRH     R0,[R1, #+0]
     97          		
     98          		return	0;
   \   00000056   0x2000             MOVS     R0,#+0
   \                     ??ReadCardFlg_1: (+1)
   \   00000058   0xBD0E             POP      {R1-R3,PC}       ;; return
     99          	}
    100          }
    101          /*******************************************************************************
    102           * 名    称： GetCardStatus
    103           * 功    能： 
    104           * 入口参数： 无
    105           * 出口参数： 无
    106           * 作    者： 无名沈
    107           * 创建日期： 2017/12/27
    108           * 修    改： 
    109           * 修改日期： 
    110           * 备    注： 
    111           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    112          uint8 GetCardStatus(void)
    113          {
   \                     GetCardStatus: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    114              static  uint8   mPlugTime = 0;
    115              static  uint8   mNoPlugTime = 0;
    116              
    117              //无卡状态下，插入IC卡
    118              //无卡状态下，插入IC卡卡，发送信号量
    119              if(ReadIC_SWT() == 1 && Ctrl.sRunPara.plugcard == 0) {
   \   00000002   0x.... 0x....      BL       ReadIC_SWT
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD11B             BNE.N    ??GetCardStatus_0
   \   0000000A   0x....             LDR.N    R0,??DataTable3_5
   \   0000000C   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   00000010   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD114             BNE.N    ??GetCardStatus_0
    120                  if( mPlugTime++ > 2) {
   \   00000018   0x....             LDR.N    R0,??DataTable3_6
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x1C41             ADDS     R1,R0,#+1
   \   0000001E   0x....             LDR.N    R2,??DataTable3_6
   \   00000020   0x7011             STRB     R1,[R2, #+0]
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x2803             CMP      R0,#+3
   \   00000026   0xDB2A             BLT.N    ??GetCardStatus_1
    121                      Ctrl.sRunPara.plugcard = 1;
   \   00000028   0x....             LDR.N    R0,??DataTable3_5
   \   0000002A   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   0000002E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000032   0x....             LDR.N    R1,??DataTable3_5
   \   00000034   0xF881 0x00AD      STRB     R0,[R1, #+173]
    122                      //发送信号量，启动 IC卡任务  
    123                      //BSP_OS_SemPost(&Bsp_Card_Sem);
    124                      mNoPlugTime = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable3_7
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
    125                      return  1;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE01E             B.N      ??GetCardStatus_2
    126                  }
    127                  //有卡状态，且已经拔出IC卡   
    128              } else if ( ReadIC_SWT() == 0 &&  Ctrl.sRunPara.plugcard == 1) {   
   \                     ??GetCardStatus_0: (+1)
   \   00000042   0x.... 0x....      BL       ReadIC_SWT
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD119             BNE.N    ??GetCardStatus_1
   \   0000004A   0x....             LDR.N    R0,??DataTable3_5
   \   0000004C   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   00000050   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD012             BEQ.N    ??GetCardStatus_1
    129                  if( mNoPlugTime++ > 2) {
   \   00000058   0x....             LDR.N    R0,??DataTable3_7
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x1C41             ADDS     R1,R0,#+1
   \   0000005E   0x....             LDR.N    R2,??DataTable3_7
   \   00000060   0x7011             STRB     R1,[R2, #+0]
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x2803             CMP      R0,#+3
   \   00000066   0xDB0A             BLT.N    ??GetCardStatus_1
    130                      Ctrl.sRunPara.plugcard = 0;                
   \   00000068   0x....             LDR.N    R0,??DataTable3_5
   \   0000006A   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   0000006E   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   00000072   0x....             LDR.N    R1,??DataTable3_5
   \   00000074   0xF881 0x00AD      STRB     R0,[R1, #+173]
    131                      mPlugTime = 0;
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x....             LDR.N    R1,??DataTable3_6
   \   0000007C   0x7008             STRB     R0,[R1, #+0]
    132                  }
    133              }
    134              return 0;
   \                     ??GetCardStatus_1: (+1)
   \   0000007E   0x2000             MOVS     R0,#+0
   \                     ??GetCardStatus_2: (+1)
   \   00000080   0xBD02             POP      {R1,PC}          ;; return
    135          }

   \                                 In section .bss, align 1
   \                     ??mPlugTime:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??mNoPlugTime:
   \   00000000                      DS8 1
    136          
    137          extern	uint8	l_CardErrorFlg;
    138          extern  OS_SEM	Bsp_Card_Sem; 

   \                                 In section .bss, align 4
    139          stcCardPara		sCardPara;
   \                     sCardPara:
   \   00000000                      DS8 180
    140          
    141          void InitCardIO( void );
    142          extern  stcModelCard            m_sModelCard;
    143          
    144          /*******************************************************************************
    145          * 名    称： app_task_card
    146          * 功    能： 卡任务
    147          * 入口参数： 无
    148          * 出口参数： 无
    149          * 作　 　者： redmorningcn.
    150          * 创建日期： 2017-05-31
    151          * 修    改：
    152          * 修改日期：
    153          * 备    注： 任务创建函数需要在app.h文件中声明
    154          *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    155          void    AppTaskCard(void)  
    156          {
   \                     AppTaskCard: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
    157              OS_ERR      err;
    158          
    159              OS_TICK     dly     = CYCLE_TIME_TICKS;
   \   00000006   0x2464             MOVS     R4,#+100
    160              OS_TICK     ticks;
    161              
    162          	uint16		CrcCheck;
    163          	//模型卡处理
    164          	unsigned char   *p;
    165          	uint32	writedsize = 0;	
   \   00000008   0xF05F 0x0800      MOVS     R8,#+0
    166          	uint32	readsize = 0;
   \   0000000C   0xF05F 0x0900      MOVS     R9,#+0
    167              uint8   carderrflg = 0;
   \   00000010   0xF05F 0x0A00      MOVS     R10,#+0
    168              
    169              //初始化 card
    170              InitCardIO();
   \   00000014   0x.... 0x....      BL       InitCardIO
    171              
    172              /***********************************************
    173              * 描述： 在看门狗标志组注册本任务的看门狗标志
    174              */
    175              OSRegWdtFlag(( OS_FLAGS     ) WDT_FLAG_DUMP); 
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      BL       OSRegWdtFlag
    176              //任务体
    177              while(1) {
    178                  /***********************************************
    179                  * 描述： 本任务看门狗标志置位
    180                  */
    181                  OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_DUMP);  
   \                     ??AppTaskCard_0: (+1)
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x.... 0x....      BL       OSSetWdtFlag
    182                  
    183                  OS_ERR      terr;
    184                  ticks   = OSTimeGet(&terr); 
   \   00000024   0xF10D 0x0002      ADD      R0,SP,#+2
   \   00000028   0x.... 0x....      BL       OSTimeGet
   \   0000002C   0x0005             MOVS     R5,R0
    185                  //等待信号量,有IC卡插入，且卡类型正确
    186                  if (( 1 == GetCardStatus() ) || (1 == BSP_OS_SemWait(&Bsp_Card_Sem,dly) ) ) {
   \   0000002E   0x.... 0x....      BL       GetCardStatus
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xD006             BEQ.N    ??AppTaskCard_1
   \   00000036   0x0021             MOVS     R1,R4
   \   00000038   0x....             LDR.N    R0,??DataTable3_8
   \   0000003A   0x.... 0x....      BL       BSP_OS_SemWait
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xF040 0x80DD      BNE.W    ??AppTaskCard_2
    187                      uint8  cardflg  = 0;
   \                     ??AppTaskCard_1: (+1)
   \   00000044   0xF05F 0x0B00      MOVS     R11,#+0
    188                      Ctrl.sRunPara.DealFlag  = 1;
   \   00000048   0x....             LDR.N    R0,??DataTable3_5
   \   0000004A   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   0000004E   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000052   0x....             LDR.N    R1,??DataTable3_5
   \   00000054   0xF881 0x00AD      STRB     R0,[R1, #+173]
    189                      extern  uint8    InitCardPageInfo(void);
    190                      //先置卡错误，如后续正确，则会重新给值
    191                      carderrflg = 1; 
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x4682             MOV      R10,R0
    192                      if(InitCardPageInfo()) {
   \   0000005C   0x.... 0x....      BL       InitCardPageInfo
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD002             BEQ.N    ??AppTaskCard_3
    193                          cardflg = ReadCardFlg();
   \   00000064   0x.... 0x....      BL       ReadCardFlg
   \   00000068   0x4683             MOV      R11,R0
    194                      }
    195                      //读IC卡标志页，取卡类型
    196                      if( cardflg ) {
   \                     ??AppTaskCard_3: (+1)
   \   0000006A   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000006E   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000072   0xF000 0x80A8      BEQ.W    ??AppTaskCard_4
    197                          //卡类型幅值，全局变量
    198                          Ctrl.sRunPara.CardType = l_CardType;
   \   00000076   0x....             LDR.N    R0,??DataTable3_3
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0x....             LDR.N    R1,??DataTable3_5
   \   0000007C   0xF8C1 0x00B0      STR      R0,[R1, #+176]
    199                          
    200                          extern  uint8	ReadCardPara(stcCardPara * sCardPara);
    201                          // 卡标示参数区读取正确。
    202                          if(ReadCardPara((stcCardPara *)	&sCardPara)) {
   \   00000080   0x....             LDR.N    R0,??DataTable3_9
   \   00000082   0x.... 0x....      BL       ReadCardPara
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xF000 0x809D      BEQ.W    ??AppTaskCard_4
    203                              
    204                              carderrflg = 0; 
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x4682             MOV      R10,R0
    205                              
    206                              switch( l_CardType ) {
   \   00000090   0x....             LDR.N    R0,??DataTable3_3
   \   00000092   0x8800             LDRH     R0,[R0, #+0]
   \   00000094   0x2801             CMP      R0,#+1
   \   00000096   0xD010             BEQ.N    ??AppTaskCard_5
   \   00000098   0x2820             CMP      R0,#+32
   \   0000009A   0xD012             BEQ.N    ??AppTaskCard_6
   \   0000009C   0x2840             CMP      R0,#+64
   \   0000009E   0xD025             BEQ.N    ??AppTaskCard_7
   \   000000A0   0xF5B0 0x7F00      CMP      R0,#+512
   \   000000A4   0xD043             BEQ.N    ??AppTaskCard_8
   \   000000A6   0xF5B0 0x6F80      CMP      R0,#+1024
   \   000000AA   0xD054             BEQ.N    ??AppTaskCard_9
   \   000000AC   0xF5B0 0x5F80      CMP      R0,#+4096
   \   000000B0   0xD05A             BEQ.N    ??AppTaskCard_10
   \   000000B2   0xF5B0 0x5F00      CMP      R0,#+8192
   \   000000B6   0xD05D             BEQ.N    ??AppTaskCard_11
   \   000000B8   0xE083             B.N      ??AppTaskCard_12
    207                                  //数据卡，取FLASH的数据
    208                              case DATA_CARD:	
    209                                  DataCard(0);
   \                     ??AppTaskCard_5: (+1)
   \   000000BA   0x2000             MOVS     R0,#+0
   \   000000BC   0x.... 0x....      BL       DataCard
    210                                  
    211                                  break;
   \   000000C0   0xE081             B.N      ??AppTaskCard_4
    212                                  //密度卡
    213                              case DENSITY_CARD:									
    214                                  CrcCheck = GetCrc16Check((uint8 *)&sCardPara.sDensity,
    215                                                           sizeof(sCardPara.sDensity) - 2);
   \                     ??AppTaskCard_6: (+1)
   \   000000C2   0x2116             MOVS     R1,#+22
   \   000000C4   0x....             LDR.N    R0,??DataTable3_9
   \   000000C6   0x.... 0x....      BL       GetCrc16Check
   \   000000CA   0x0006             MOVS     R6,R0
    216                                  
    217                                  Ctrl.SOilPara.Density = 820;
   \   000000CC   0xF44F 0x704D      MOV      R0,#+820
   \   000000D0   0x....             LDR.N    R1,??DataTable3_5
   \   000000D2   0xF8A1 0x00A4      STRH     R0,[R1, #+164]
    218                                  //校验和相等	
    219                                  if(CrcCheck == sCardPara.sDensity.CrcCheck)	 {
   \   000000D6   0x....             LDR.N    R0,??DataTable3_9
   \   000000D8   0x8AC0             LDRH     R0,[R0, #+22]
   \   000000DA   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000DC   0x4286             CMP      R6,R0
   \   000000DE   0xD104             BNE.N    ??AppTaskCard_13
    220                                      //密度幅值
    221                                      Ctrl.SOilPara.Density = sCardPara.sDensity.Density;	
   \   000000E0   0x....             LDR.N    R0,??DataTable3_9
   \   000000E2   0x6880             LDR      R0,[R0, #+8]
   \   000000E4   0x....             LDR.N    R1,??DataTable3_5
   \   000000E6   0xF8A1 0x00A4      STRH     R0,[R1, #+164]
    222                                  }
    223                                  break;
   \                     ??AppTaskCard_13: (+1)
   \   000000EA   0xE06C             B.N      ??AppTaskCard_4
    224                                  //模型卡
    225                              case MODEL_CARD:									
    226                                  p = (uint8  *)&m_sModelCard;
   \                     ??AppTaskCard_7: (+1)
   \   000000EC   0x....             LDR.N    R0,??DataTable3_10
   \   000000EE   0x0007             MOVS     R7,R0
    227                                  writedsize = 0;
   \   000000F0   0x2000             MOVS     R0,#+0
   \   000000F2   0x4680             MOV      R8,R0
    228                                  //将数据读值m_sModelCard.
    229                                  while(writedsize < sizeof(stcModelCard)) {	                
   \                     ??AppTaskCard_14: (+1)
   \   000000F4   0xF241 0x7044      MOVW     R0,#+5956
   \   000000F8   0x4580             CMP      R8,R0
   \   000000FA   0xD217             BCS.N    ??AppTaskCard_15
    230                                      readsize = (sizeof(stcModelCard)- writedsize)>256?
    231                                          256:(sizeof(stcModelCard)- writedsize);
   \   000000FC   0xF241 0x7044      MOVW     R0,#+5956
   \   00000100   0xEBB0 0x0008      SUBS     R0,R0,R8
   \   00000104   0xF5B0 0x7F80      CMP      R0,#+256
   \   00000108   0xD902             BLS.N    ??AppTaskCard_16
   \   0000010A   0xF44F 0x7980      MOV      R9,#+256
   \   0000010E   0xE003             B.N      ??AppTaskCard_17
   \                     ??AppTaskCard_16: (+1)
   \   00000110   0xF241 0x7044      MOVW     R0,#+5956
   \   00000114   0xEBB0 0x0908      SUBS     R9,R0,R8
    232                                          
    233                                          ReadCard(CARD_DATA_ADDR+writedsize,&p[writedsize],readsize);
   \                     ??AppTaskCard_17: (+1)
   \   00000118   0x464A             MOV      R2,R9
   \   0000011A   0xEB18 0x0107      ADDS     R1,R8,R7
   \   0000011E   0xF518 0x50A0      ADDS     R0,R8,#+5120
   \   00000122   0x.... 0x....      BL       ReadCard
    234                                          
    235                                          writedsize +=readsize;
   \   00000126   0xEB19 0x0808      ADDS     R8,R9,R8
   \   0000012A   0xE7E3             B.N      ??AppTaskCard_14
    236                                  }
    237                                  
    238                                  break;				
   \                     ??AppTaskCard_15: (+1)
   \   0000012C   0xE04B             B.N      ??AppTaskCard_4
    239                                  //高度调整卡	
    240                              case HIGHT_CARD:
    241                                  CrcCheck = GetCrc16Check((uint8 *)&sCardPara.sReviseHight,
    242                                                           sizeof(sCardPara.sReviseHight) - 2);
   \                     ??AppTaskCard_8: (+1)
   \   0000012E   0x2102             MOVS     R1,#+2
   \   00000130   0x....             LDR.N    R0,??DataTable3_11
   \   00000132   0x.... 0x....      BL       GetCrc16Check
   \   00000136   0x0006             MOVS     R6,R0
    243                                  
    244                                  Ctrl.SOilPara.Hig  = 0;
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x....             LDR.N    R1,??DataTable3_5
   \   0000013C   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    245                                  //校验和相等	
    246                                  if(CrcCheck == sCardPara.sReviseHight.CrcCheck) {
   \   00000140   0x....             LDR.N    R0,??DataTable3_9
   \   00000142   0x8CC0             LDRH     R0,[R0, #+38]
   \   00000144   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000146   0x4286             CMP      R6,R0
   \   00000148   0xD104             BNE.N    ??AppTaskCard_18
    247                                      Ctrl.SOilPara.Hig = sCardPara.sReviseHight.ReviseHight;
   \   0000014A   0x....             LDR.N    R0,??DataTable3_9
   \   0000014C   0x8C80             LDRH     R0,[R0, #+36]
   \   0000014E   0x....             LDR.N    R1,??DataTable3_5
   \   00000150   0xF8A1 0x00A2      STRH     R0,[R1, #+162]
    248                                  }
    249                                  break;		
   \                     ??AppTaskCard_18: (+1)
   \   00000154   0xE037             B.N      ??AppTaskCard_4
    250                                  //数据拷贝卡//还未写入内容
    251                              case COPY_CARD:													
    252                                  DisplaySet(100,1,"COPY");						
   \                     ??AppTaskCard_9: (+1)
   \   00000156   0x....             LDR.N    R2,??DataTable3_12
   \   00000158   0x2101             MOVS     R1,#+1
   \   0000015A   0x2064             MOVS     R0,#+100
   \   0000015C   0x.... 0x....      BL       DisplaySet
    253                                  DataCard(1);
   \   00000160   0x2001             MOVS     R0,#+1
   \   00000162   0x.... 0x....      BL       DataCard
    254                                  break;
   \   00000166   0xE02E             B.N      ??AppTaskCard_4
    255                                  //模型选择卡
    256                              case MODEL_SELECT_CARD:	
    257                                  Ctrl.SOilPara.ModelNum = sCardPara.SetVal;
   \                     ??AppTaskCard_10: (+1)
   \   00000168   0x....             LDR.N    R0,??DataTable3_9
   \   0000016A   0x6980             LDR      R0,[R0, #+24]
   \   0000016C   0x....             LDR.N    R1,??DataTable3_5
   \   0000016E   0xF881 0x00A0      STRB     R0,[R1, #+160]
    258                                  break;	
   \   00000172   0xE028             B.N      ??AppTaskCard_4
    259                                  //装车卡
    260                              case FIX_CARD:
    261                                  CrcCheck = GetCrc16Check((uint8 *)&sCardPara.sFixInfo,
    262                                                           sizeof(sCardPara.sFixInfo) - 2);
   \                     ??AppTaskCard_11: (+1)
   \   00000174   0x211A             MOVS     R1,#+26
   \   00000176   0x....             LDR.N    R0,??DataTable3_13
   \   00000178   0x.... 0x....      BL       GetCrc16Check
   \   0000017C   0x0006             MOVS     R6,R0
    263                                  
    264                                  Ctrl.sProductInfo.sLocoId.Type = 1;
   \   0000017E   0x2001             MOVS     R0,#+1
   \   00000180   0x....             LDR.N    R1,??DataTable3_5
   \   00000182   0x8388             STRH     R0,[R1, #+28]
    265                                  Ctrl.sProductInfo.sLocoId.Num  = 1000;
   \   00000184   0xF44F 0x707A      MOV      R0,#+1000
   \   00000188   0x....             LDR.N    R1,??DataTable3_5
   \   0000018A   0x83C8             STRH     R0,[R1, #+30]
    266                                  //校验和相等	
    267                                  if(CrcCheck == sCardPara.sFixInfo.CrcCheck) {
   \   0000018C   0x....             LDR.N    R0,??DataTable3_9
   \   0000018E   0xF8B0 0x0042      LDRH     R0,[R0, #+66]
   \   00000192   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000194   0x4286             CMP      R6,R0
   \   00000196   0xD113             BNE.N    ??AppTaskCard_19
    268                                      Ctrl.sProductInfo.sLocoId.Num  = BUILD_INT16U(sCardPara.sFixInfo.LocoNum[0],sCardPara.sFixInfo.LocoNum[1]);
   \   00000198   0x....             LDR.N    R0,??DataTable3_9
   \   0000019A   0xF890 0x002A      LDRB     R0,[R0, #+42]
   \   0000019E   0x....             LDR.N    R1,??DataTable3_9
   \   000001A0   0xF891 0x102B      LDRB     R1,[R1, #+43]
   \   000001A4   0xEB10 0x2001      ADDS     R0,R0,R1, LSL #+8
   \   000001A8   0x....             LDR.N    R1,??DataTable3_5
   \   000001AA   0x83C8             STRH     R0,[R1, #+30]
    269                                      Ctrl.sProductInfo.sLocoId.Type = BUILD_INT16U(sCardPara.sFixInfo.LocoTyp,sCardPara.sFixInfo.E_LocoTyp); 
   \   000001AC   0x....             LDR.N    R0,??DataTable3_9
   \   000001AE   0xF890 0x0028      LDRB     R0,[R0, #+40]
   \   000001B2   0x....             LDR.N    R1,??DataTable3_9
   \   000001B4   0xF891 0x1029      LDRB     R1,[R1, #+41]
   \   000001B8   0xEB10 0x2001      ADDS     R0,R0,R1, LSL #+8
   \   000001BC   0x....             LDR.N    R1,??DataTable3_5
   \   000001BE   0x8388             STRH     R0,[R1, #+28]
    270                                  }
    271                                  
    272                                  break;					
   \                     ??AppTaskCard_19: (+1)
   \   000001C0   0xE001             B.N      ??AppTaskCard_4
    273                                  
    274                              default:
    275                                  carderrflg = 1;;
   \                     ??AppTaskCard_12: (+1)
   \   000001C2   0x2001             MOVS     R0,#+1
   \   000001C4   0x4682             MOV      R10,R0
    276                              }
    277                          }	
    278                      }
    279                      //卡类型错误，返回错误信息
    280                      if(carderrflg == 1) {
   \                     ??AppTaskCard_4: (+1)
   \   000001C6   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001CA   0xF1BA 0x0F01      CMP      R10,#+1
   \   000001CE   0xD108             BNE.N    ??AppTaskCard_20
    281                          Ctrl.sRunPara.CardType      = DATA_CARD_ERR;    //卡异常
   \   000001D0   0xF44F 0x4000      MOV      R0,#+32768
   \   000001D4   0x....             LDR.N    R1,??DataTable3_5
   \   000001D6   0xF8C1 0x00B0      STR      R0,[R1, #+176]
    282                          Ctrl.sRunPara.CardErrData   = 0x01;             //卡异常 
   \   000001DA   0x2001             MOVS     R0,#+1
   \   000001DC   0x....             LDR.N    R1,??DataTable3_5
   \   000001DE   0xF881 0x00B4      STRB     R0,[R1, #+180]
    283                      }
    284          
    285                      Ctrl.sRunPara.DealFlag  = 0;
   \                     ??AppTaskCard_20: (+1)
   \   000001E2   0x....             LDR.N    R0,??DataTable3_5
   \   000001E4   0xF890 0x00AD      LDRB     R0,[R0, #+173]
   \   000001E8   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   000001EC   0x....             LDR.N    R1,??DataTable3_5
   \   000001EE   0xF881 0x00AD      STRB     R0,[R1, #+173]
    286                      OS_ERR err;
    287          
    288                      //IC卡处理完成，通知串口通讯处理
    289                      OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,
    290                          ( OS_FLAGS      )COMM_EVT_FLAG_PLUG_CARD,
    291                          ( OS_OPT        )OS_OPT_POST_FLAG_SET,
    292                          ( OS_ERR       *)&err);
   \   000001F2   0x466B             MOV      R3,SP
   \   000001F4   0x2200             MOVS     R2,#+0
   \   000001F6   0x2140             MOVS     R1,#+64
   \   000001F8   0x....             LDR.N    R0,??DataTable3_14
   \   000001FA   0x.... 0x....      BL       OSFlagPost
    293                  } else {
    294                      
    295                  }
    296                  /***********************************************
    297                  * 描述： 去除任务运行的时间，等到一个控制周期里剩余需要延时的时间
    298                  */
    299                  dly   = CYCLE_TIME_TICKS - ( OSTimeGet(&err) - ticks );
   \                     ??AppTaskCard_2: (+1)
   \   000001FE   0xA801             ADD      R0,SP,#+4
   \   00000200   0x.... 0x....      BL       OSTimeGet
   \   00000204   0xF1D0 0x0064      RSBS     R0,R0,#+100
   \   00000208   0x1828             ADDS     R0,R5,R0
   \   0000020A   0x0004             MOVS     R4,R0
    300                  if ( dly  < 1 ) {
   \   0000020C   0x2C00             CMP      R4,#+0
   \   0000020E   0xD102             BNE.N    ??AppTaskCard_21
    301                      dly = 1;
   \   00000210   0x2001             MOVS     R0,#+1
   \   00000212   0x0004             MOVS     R4,R0
   \   00000214   0xE003             B.N      ??AppTaskCard_22
    302                  } else if ( dly > CYCLE_TIME_TICKS ) {
   \                     ??AppTaskCard_21: (+1)
   \   00000216   0x2C65             CMP      R4,#+101
   \   00000218   0xD301             BCC.N    ??AppTaskCard_22
    303                      dly = CYCLE_TIME_TICKS;
   \   0000021A   0x2064             MOVS     R0,#+100
   \   0000021C   0x0004             MOVS     R4,R0
    304                  }
    305                  BSP_OS_TimeDly(dly);
   \                     ??AppTaskCard_22: (+1)
   \   0000021E   0x0020             MOVS     R0,R4
   \   00000220   0x.... 0x....      BL       BSP_OS_TimeDly
   \   00000224   0xE6FB             B.N      ??AppTaskCard_0
    306              }
    307          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     AppTaskCardStk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     AppTaskCardTCB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     l_CardType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     l_FlgZoneErrEvent

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     ??mPlugTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     ??mNoPlugTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     Bsp_Card_Sem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     sCardPara

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     m_sModelCard

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     sCardPara+0x24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     sCardPara+0x28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     Ctrl+0x275

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x41 0x70          DC8 "App Task Card"
   \              0x70 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x20 0x43    
   \              0x61 0x72    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x43 0x4F          DC8 "COPY"
   \              0x50 0x59    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    308           
    309              

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   AppTaskCard
        48   -> BSP_OS_SemWait
        48   -> BSP_OS_TimeDly
        48   -> DataCard
        48   -> DisplaySet
        48   -> GetCardStatus
        48   -> GetCrc16Check
        48   -> InitCardIO
        48   -> InitCardPageInfo
        48   -> OSFlagPost
        48   -> OSRegWdtFlag
        48   -> OSSetWdtFlag
        48   -> OSTimeGet
        48   -> ReadCard
        48   -> ReadCardFlg
        48   -> ReadCardPara
      48   App_TaskCardCreate
        48   -> OSTaskCreate
       8   GetCardStatus
         8   -> ReadIC_SWT
      16   ReadCardFlg
        16   -> GetCrc16Check
        16   -> ReadCard


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      16  ?_0
       8  ?_1
     550  AppTaskCard
    2048  AppTaskCardStk
     160  AppTaskCardTCB
      60  App_TaskCardCreate
     130  GetCardStatus
      90  ReadCardFlg
       2  l_CardType
       1  l_FlgZoneErrEvent
       1  mNoPlugTime
       1  mPlugTime
     180  sCardPara

 
 2 393 bytes in section .bss
    24 bytes in section .rodata
   890 bytes in section .text
 
   890 bytes of CODE  memory
    24 bytes of CONST memory
 2 393 bytes of DATA  memory

Errors: none
Warnings: 1
