###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       18/Dec/2017  15:16:24
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC136B-320 IC¿¨Ä£¿é\Software\APP\xmain.c
#    Command line =  
#        "F:\iar\NC136B-320 IC¿¨Ä£¿é\Software\APP\xmain.c" -lCN
#        "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\xmain.lst
#    Object file  =  
#        F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\xmain.o
#
###############################################################################

F:\iar\NC136B-320 IC¿¨Ä£¿é\Software\APP\xmain.c
      1          /*******************************************************************************
      2           *   Filename:      app.c
      3           *   Revised:       $Date: 2013-06-30$
      4           *   Revision:      $
      5           *	 Writer:		Wuming Shen.
      6           *
      7           *   Description:
      8           *   Notes:
      9           *					QQ:276193028
     10           *     				E-mail:shenchangwei945@163.com
     11           *
     12           *   All copyrights reserved to Wuming Shen.
     13           *
     14           *******************************************************************************/
     15          
     16          /*******************************************************************************
     17           * INCLUDES
     18           */
     19          #define  SNL_APP_SOURCE
     20          #include <app.h>
     21          #include <app_ctrl.h>
     22          
     23          //#include <iap.h>
     24          
     25          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     26          const  CPU_CHAR  *main__c = "$Id: $";
     27          #endif
     28          
     29          
     30          void    TaskInitStore(void);
     31          osalEvt  TaskStoreEvtProcess(INT8U task_id, osalEvt task_event);
     32          
     33          void    TaskInitCalc(void);
     34          osalEvt  TaskCalcEvtProcess(INT8U task_id, osalEvt task_event);
     35          
     36          void    TaskInitSpeed(void);
     37          osalEvt  TaskSpeedEvtProcess(INT8U task_id, osalEvt task_event);
     38          
     39          void     TaskInitLed(void);
     40          osalEvt  TaskLedEvtProcess(INT8U task_id, osalEvt task_event);
     41          
     42          uint8 	FRAM_StoreRunPara(stcRunPara  *sRunPara);
     43          void	InitFlashIO(void);
     44          void	GPIO_Fram_Init(void);
     45          uint8 FRAM_ReadRecNumMgr(StrRecNumMgr  *SRecNumMgr);
     46          uint8 FRAM_ReadProductInfo(StrProductInfo  *sProductInfo);
     47          void  App_TaskCardCreate(void);
     48          uint8 FRAM_ReadRunPara(stcRunPara  *sRunPara);
     49          
     50          
     51          //void    TaskInitStore(void);
     52          //osalEvt  TaskStoreEvtProcess(INT8U task_id, osalEvt task_event);
     53          /*******************************************************************************
     54           * CONSTANTS
     55           */
     56          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 2)
     57          
     58          /*******************************************************************************
     59           * MACROS
     60           */
     61          
     62          /*******************************************************************************
     63           * TYPEDEFS
     64           */
     65          
     66          /*******************************************************************************
     67           * LOCAL VARIABLES
     68           */
     69          
     70          /*******************************************************************************
     71           * GLOBAL VARIABLES
     72           */
     73          /***********************************************
     74          * ÃèÊö£º ´´½¨±êÖ¾×é
     75          */

   \                                 In section .bss, align 4
     76          OS_FLAG_GRP         WdtFlagGRP;                     //¿´ÃÅ¹·±êÖ¾×é
   \                     WdtFlagGRP:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     77          OS_FLAGS            WdtFlags;
   \                     WdtFlags:
   \   00000000                      DS8 4
     78          
     79          /*******************************************************************************
     80           * LOCAL FUNCTIONS
     81           *
     82           * ·µ»ØÀàÐÍ         º¯ÊýÃû³Æ                Èë¿Ú²ÎÊý
     83           */
     84          
     85          /*******************************************************************************
     86           * GLOBAL FUNCTIONS
     87           */
     88          

   \                                 In section .bss, align 4
     89          stcSysCtrl       sCtrl;
   \                     sCtrl:
   \   00000000                      DS8 720
     90          
     91          

   \                                 In section .text, align 2, keep-with-next
     92          void    app_init_sctrl(void)
     93          {
   \                     app_init_sctrl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     94              sCtrl.Password      =   0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable2
   \   00000006   0x8008             STRH     R0,[R1, #+0]
     95              sCtrl.SoftWareID    =   1705;       //ÄêÔÂ£¬°æ±¾
   \   00000008   0xF240 0x60A9      MOVW     R0,#+1705
   \   0000000C   0x....             LDR.N    R1,??DataTable2
   \   0000000E   0x8048             STRH     R0,[R1, #+2]
     96              
     97          //¿ªÊ¼±êÊ¾    //´æ´¢Ê±¼ä¼ä¸ô
     98              sCtrl.sRunPara.StartFlg = 1;  
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable2
   \   00000014   0xF881 0x00AE      STRB     R0,[R1, #+174]
     99              sCtrl.sRunPara.SysSta   = 0;        
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR.N    R1,??DataTable2
   \   0000001C   0xF881 0x00AF      STRB     R0,[R1, #+175]
    100              
    101             	FRAM_StoreRunPara((stcRunPara *) &sCtrl.sRunPara);
   \   00000020   0x....             LDR.N    R0,??DataTable2_1
   \   00000022   0x.... 0x....      BL       FRAM_StoreRunPara
    102              
    103              sCtrl.sRunPara.plugcard = 0;        //Ã»²å¿¨      
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable2
   \   0000002A   0xF881 0x00AD      STRB     R0,[R1, #+173]
    104              sCtrl.sRunPara.StoreTime= 60;       
   \   0000002E   0x203C             MOVS     R0,#+60
   \   00000030   0x....             LDR.N    R1,??DataTable2
   \   00000032   0xF881 0x00AC      STRB     R0,[R1, #+172]
    105              
    106          //ICÄ£¿é Êý¾Ý ³õÊ¼»¯    
    107              sCtrl.Otr.ConnCtrl[0].ConnFlg   = 1;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable2
   \   0000003A   0xF881 0x0208      STRB     R0,[R1, #+520]
    108              sCtrl.Otr.ConnCtrl[0].ErrFlg    = 0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x....             LDR.N    R1,??DataTable2
   \   00000042   0xF881 0x020B      STRB     R0,[R1, #+523]
    109              sCtrl.Otr.ConnCtrl[0].MasterAddr= 0x80;
   \   00000046   0x2080             MOVS     R0,#+128
   \   00000048   0x....             LDR.N    R1,??DataTable2
   \   0000004A   0xF881 0x020D      STRB     R0,[R1, #+525]
    110              sCtrl.Otr.ConnCtrl[0].SlaveAddr = SLAVE_ADDR_OTR;
   \   0000004E   0x20C1             MOVS     R0,#+193
   \   00000050   0x....             LDR.N    R1,??DataTable2
   \   00000052   0xF881 0x020C      STRB     R0,[R1, #+524]
    111              sCtrl.Otr.ConnCtrl[0].RecvEndFlg= 0;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x....             LDR.N    R1,??DataTable2
   \   0000005A   0xF881 0x0209      STRB     R0,[R1, #+521]
    112              sCtrl.Otr.ConnCtrl[0].SendFlg   = 0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x....             LDR.N    R1,??DataTable2
   \   00000062   0xF881 0x020F      STRB     R0,[R1, #+527]
    113              sCtrl.Otr.ConnCtrl[0].SendFramNum=1;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x....             LDR.N    R1,??DataTable2
   \   0000006A   0xF881 0x020E      STRB     R0,[R1, #+526]
    114              sCtrl.Otr.ConnCtrl[0].TimeOut   = 10;       
   \   0000006E   0x200A             MOVS     R0,#+10
   \   00000070   0x....             LDR.N    R1,??DataTable2
   \   00000072   0xF881 0x020A      STRB     R0,[R1, #+522]
    115              
    116          //ICÄ£¿é ²ÎÊý ³õÊ¼»¯    
    117              sCtrl.Otr.ConnCtrl[1].ConnFlg   = 1;
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable2
   \   0000007A   0xF881 0x0210      STRB     R0,[R1, #+528]
    118              sCtrl.Otr.ConnCtrl[1].ErrFlg    = 0;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x....             LDR.N    R1,??DataTable2
   \   00000082   0xF881 0x0213      STRB     R0,[R1, #+531]
    119              sCtrl.Otr.ConnCtrl[1].MasterAddr= 0x80;
   \   00000086   0x2080             MOVS     R0,#+128
   \   00000088   0x....             LDR.N    R1,??DataTable2
   \   0000008A   0xF881 0x0215      STRB     R0,[R1, #+533]
    120              sCtrl.Otr.ConnCtrl[1].SlaveAddr = SLAVE_ADDR_SET;
   \   0000008E   0x20C2             MOVS     R0,#+194
   \   00000090   0x....             LDR.N    R1,??DataTable2
   \   00000092   0xF881 0x0214      STRB     R0,[R1, #+532]
    121              sCtrl.Otr.ConnCtrl[1].RecvEndFlg= 0;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x....             LDR.N    R1,??DataTable2
   \   0000009A   0xF881 0x0211      STRB     R0,[R1, #+529]
    122              sCtrl.Otr.ConnCtrl[1].SendFlg   = 0;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x....             LDR.N    R1,??DataTable2
   \   000000A2   0xF881 0x0217      STRB     R0,[R1, #+535]
    123              sCtrl.Otr.ConnCtrl[1].SendFramNum=1;
   \   000000A6   0x2001             MOVS     R0,#+1
   \   000000A8   0x....             LDR.N    R1,??DataTable2
   \   000000AA   0xF881 0x0216      STRB     R0,[R1, #+534]
    124              sCtrl.Otr.ConnCtrl[1].TimeOut   = 10;       
   \   000000AE   0x200A             MOVS     R0,#+10
   \   000000B0   0x....             LDR.N    R1,??DataTable2
   \   000000B2   0xF881 0x0212      STRB     R0,[R1, #+530]
    125          }
   \   000000B6   0xBD01             POP      {R0,PC}          ;; return
    126          
    127          
    128          
    129          /*******************************************************************************
    130           * EXTERN VARIABLES
    131           */
    132          
    133          /*******************************************************************************
    134           * EXTERN FUNCTIONS
    135           */
    136          
    137          /*******************************************************************************
    138           * Ãû    ³Æ£º App_Main
    139           * ¹¦    ÄÜ£º ÏµÍ³³õ¿ªÊ¼Ç°µ÷ÓÃ´Ëº¯Êý
    140           * Èë¿Ú²ÎÊý£º ÎÞ
    141           * ³ö¿Ú²ÎÊý£º ÎÞ
    142           * ×÷¡¡ ¡¡Õß£º ÎÞÃûÉò
    143           * ´´½¨ÈÕÆÚ£º 2014-08-08
    144           * ÐÞ    ¸Ä£º
    145           * ÐÞ¸ÄÈÕÆÚ£º
    146           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    147           void App_Main(void)
    148           {
   \                     App_Main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    149               
    150              //³õÊ¼»¯flash
    151              InitFlashIO();
   \   00000002   0x.... 0x....      BL       InitFlashIO
    152              //³õÊ¼»¯fram
    153              GPIO_Fram_Init();
   \   00000006   0x.... 0x....      BL       GPIO_Fram_Init
    154              
    155              app_init_sctrl();                  //³õÊ¼»¯È«¾Ö±äÁ¿
   \   0000000A   0x.... 0x....      BL       app_init_sctrl
    156               
    157             //¶ÁsCtrl 
    158              FRAM_ReadRecNumMgr((StrRecNumMgr  *)&sCtrl.sRecNumMgr);         //¶Á¼ÇÂ¼ºÅ
   \   0000000E   0x....             LDR.N    R0,??DataTable2_2
   \   00000010   0x.... 0x....      BL       FRAM_ReadRecNumMgr
    159              FRAM_ReadProductInfo((StrProductInfo  *)&sCtrl.sProductInfo);   //¶Á²úÆ·±àºÅ
   \   00000014   0x....             LDR.N    R0,??DataTable2_3
   \   00000016   0x.... 0x....      BL       FRAM_ReadProductInfo
    160          //    FRAM_ReadCurRecord((stcFlshRec  *)&sCtrl.sRec);                 //¶Áµ±Ç°¼ÇÂ¼
    161          //    FRAM_ReadOilPara((StrOilPara  *)&sCtrl.SOilPara);               //¶Á¼ÆËã²ÎÊý
    162              FRAM_ReadRunPara((stcRunPara  *)&sCtrl.sRunPara);               //¶ÁÔËÐÐ²ÎÊý
   \   0000001A   0x....             LDR.N    R0,??DataTable2_1
   \   0000001C   0x.... 0x....      BL       FRAM_ReadRunPara
    163          //    FRAM_ReadCalcModel((stcCalcModel  *)&sCtrl.sCalcModel);         //¶Á¼ÆËãÄ£ÐÍ
    164               
    165              //NVIC_SetVTOR(0x10000);
    166              /***********************************************
    167              * ÃèÊö£º Disable all interrupts.
    168              */
    169              //BSP_IntDisAll();
    170              /***********************************************
    171              * ÃèÊö£º ÖØÐÂÉèÖÃÓ¦ÓÃ³ÌÐòÖÐ¶ÏÏòÁ¿±í£¬Èç¹ûÃ»ÓÐBOOTLOADER
    172              *        NVIC_VectTab_FLASH_OFFSET = 0
    173              */
    174          //#if defined     (IMAGE_A)
    175          //    /***********************************************
    176          //    * ÃèÊö£º ³ÌÐòA
    177          //    */
    178          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_A-FLASH_BOOT_ADDR);
    179          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    180          //#elif defined   (IMAGE_B)
    181          //    /***********************************************
    182          //    * ÃèÊö£º ³ÌÐòB
    183          //    */
    184          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, FLASH_APP_ADDR_B-FLASH_BOOT_ADDR);
    185          //    IAP_SetStatus(IAP_STS_SUCCEED); 
    186          //#else
    187          //    /***********************************************
    188          //    * ÃèÊö£º ³ÌÐò
    189          //    */
    190          //    NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0X0000);
    191          //#endif
    192           
    193           }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    194          
    195          /*******************************************************************************
    196           * Ãû    ³Æ£º App_InitStartHook
    197           * ¹¦    ÄÜ£º ÏµÍ³³õÊ¼»¯¿ªÊ¼Ç°µ÷ÓÃ´Ëº¯Êý
    198           * Èë¿Ú²ÎÊý£º ÎÞ
    199           * ³ö¿Ú²ÎÊý£º ÎÞ
    200           * ×÷¡¡ ¡¡Õß£º ÎÞÃûÉò
    201           * ´´½¨ÈÕÆÚ£º 2014-08-08
    202           * ÐÞ    ¸Ä£º
    203           * ÐÞ¸ÄÈÕÆÚ£º
    204           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    205           void App_InitStartHook(void)
    206           {
    207           
    208           }
   \                     App_InitStartHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    209           
    210          /*******************************************************************************
    211           * Ãû    ³Æ£º App_InitEndHook
    212           * ¹¦    ÄÜ£º ÏµÍ³³õÊ¼»¯½áËÙºóµ÷ÓÃ´Ëº¯Êý
    213           * Èë¿Ú²ÎÊý£º ÎÞ
    214           * ³ö¿Ú²ÎÊý£º ÎÞ
    215           * ×÷¡¡ ¡¡Õß£º ÎÞÃûÉò
    216           * ´´½¨ÈÕÆÚ£º 2014-08-08
    217           * ÐÞ    ¸Ä£º
    218           * ÐÞ¸ÄÈÕÆÚ£º
    219           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    220           void App_InitEndHook(void)
    221           {
    222           
    223           }
   \                     App_InitEndHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    224           
    225           /*******************************************************************************
    226           * Ãû    ³Æ£º OS_TaskCreateHook
    227           * ¹¦    ÄÜ£º OS´´½¨ÈÎÎñ»Øµ÷º¯Êý
    228           * Èë¿Ú²ÎÊý£º ÎÞ
    229           * ³ö¿Ú²ÎÊý£º ÎÞ
    230           * ×÷  ¡¡Õß£º ÎÞÃûÉò
    231           * ´´½¨ÈÕÆÚ£º 2014-08-08
    232           * ÐÞ    ¸Ä£º
    233           * ÐÞ¸ÄÈÕÆÚ£º
    234           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    235           void OS_TaskCreateHook(void)
    236           {     
   \                     OS_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    237             App_TaskCommCreate();
   \   00000002   0x.... 0x....      BL       App_TaskCommCreate
    238             App_TaskCardCreate();
   \   00000006   0x.... 0x....      BL       App_TaskCardCreate
    239              //App_TaskMaterCreate();
    240              //App_TaskDtuCreate();
    241              //App_TaskKeyCreate();
    242              //App_TaskBeepCreate();
    243           }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    244           
    245           /*******************************************************************************
    246           * Ãû    ³Æ£º OSAL_TaskCreateHook
    247           * ¹¦    ÄÜ£º OSAL´´½¨ÈÎÎñ»Øµ÷º¯Êý
    248           * Èë¿Ú²ÎÊý£º ÎÞ
    249           * ³ö¿Ú²ÎÊý£º ÎÞ
    250           * ×÷¡¡ ¡¡Õß£º ÎÞÃûÉò
    251           * ´´½¨ÈÕÆÚ£º 2014-08-08
    252           * ÐÞ    ¸Ä£º
    253           * ÐÞ¸ÄÈÕÆÚ£º
    254           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    255           void OSAL_TaskCreateHook(void)
    256           {
   \                     OSAL_TaskCreateHook: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    257              //osal_add_Task(TaskInitKey,                      // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    258              //              TaskKeyEvtProcess,                // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    259              //              OS_TASK_PRO_KEY,                  // ÈÎÎñÓÅÏÈ¼¶
    260              //              OS_TASK_ID_KEY);                  // ÈÎÎñID
    261              
    262              //osal_add_Task(TaskInitCtrl,                     // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    263              //              TaskCtrlEvtProcess,               // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    264              //              OS_TASK_PRO_CTRL,                 // ÈÎÎñÓÅÏÈ¼¶
    265              //              OS_TASK_ID_CTRL);                 // ÈÎÎñID
    266                 
    267              osal_add_Task(TaskInitTmr,                      // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    268                            TaskTmrEvtProcess,                // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    269                            OS_TASK_PRO_TMR,                  // ÈÎÎñÓÅÏÈ¼¶
    270                            OS_TASK_ID_TMR);                  // ÈÎÎñID
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2208             MOVS     R2,#+8
   \   00000006   0x....             LDR.N    R1,??DataTable2_4
   \   00000008   0x....             LDR.N    R0,??DataTable2_5
   \   0000000A   0x.... 0x....      BL       osal_add_Task
    271          /*        
    272          
    273              osal_add_Task(TaskInitDisp,                     // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    274                            TaskDispEvtProcess,               // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    275                            OS_TASK_PRO_DISP,                 // ÈÎÎñÓÅÏÈ¼¶
    276                            OS_TASK_ID_DISP);                 // ÈÎÎñID 
    277              
    278              osal_add_Task(TaskInitStore,                    // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    279                            TaskStoreEvtProcess,              // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    280                            OS_TASK_PRO_STORE,                // ÈÎÎñÓÅÏÈ¼¶
    281                            OS_TASK_ID_STORE);                // ÈÎÎñID
    282              
    283              osal_add_Task(TaskInitCalc,                    // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    284                            TaskCalcEvtProcess,              // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    285                            OS_TASK_PRO_CALC,                // ÈÎÎñÓÅÏÈ¼¶
    286                            OS_TASK_ID_CALC);                // ÈÎÎñID   
    287             
    288              osal_add_Task(TaskInitSpeed,                    // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    289                            TaskSpeedEvtProcess,              // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    290                            OS_TASK_PRO_SPEED,                // ÈÎÎñÓÅÏÈ¼¶
    291                            OS_TASK_ID_SPEED);                // ÈÎÎñID       
    292          */     
    293              osal_add_Task(TaskInitLed,                      // ÈÎÎñ³õÊ¼»¯º¯ÊýÖ¸Õë
    294                            TaskLedEvtProcess,                // ÈÎÎñÊÂ¼þ´¦Àíº¯ÊýÖ¸Õë
    295                            OS_TASK_PRO_LED,                  // ÈÎÎñÓÅÏÈ¼¶
    296                            OS_TASK_ID_LED);                  // ÈÎÎñID    
   \   0000000E   0x2306             MOVS     R3,#+6
   \   00000010   0x2203             MOVS     R2,#+3
   \   00000012   0x....             LDR.N    R1,??DataTable2_6
   \   00000014   0x....             LDR.N    R0,??DataTable2_7
   \   00000016   0x.... 0x....      BL       osal_add_Task
    297           }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     sCtrl+0xAC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     sCtrl+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     sCtrl+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     TaskTmrEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     TaskInitTmr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     TaskLedEvtProcess

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     TaskInitLed
    298          /*******************************************************************************
    299           *              end of file                                                    *
    300           *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_InitEndHook
       0   App_InitStartHook
       8   App_Main
         8   -> FRAM_ReadProductInfo
         8   -> FRAM_ReadRecNumMgr
         8   -> FRAM_ReadRunPara
         8   -> GPIO_Fram_Init
         8   -> InitFlashIO
         8   -> app_init_sctrl
       8   OSAL_TaskCreateHook
         8   -> osal_add_Task
       8   OS_TaskCreateHook
         8   -> App_TaskCardCreate
         8   -> App_TaskCommCreate
       8   app_init_sctrl
         8   -> FRAM_StoreRunPara


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       2  App_InitEndHook
       2  App_InitStartHook
      34  App_Main
      28  OSAL_TaskCreateHook
      12  OS_TaskCreateHook
      40  WdtFlagGRP
       4  WdtFlags
     184  app_init_sctrl
     720  sCtrl

 
 764 bytes in section .bss
 294 bytes in section .text
 
 294 bytes of CODE memory
 764 bytes of DATA memory

Errors: none
Warnings: none
