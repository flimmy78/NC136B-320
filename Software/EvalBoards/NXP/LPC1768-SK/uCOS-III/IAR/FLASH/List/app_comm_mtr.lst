###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       31/May/2017  10:15:20
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-320 IC卡模块\Software\APP\comm\app_comm_mtr.c
#    Command line =  
#        "F:\iar\NC136B-320 IC卡模块\Software\APP\comm\app_comm_mtr.c" -lCN
#        "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_comm_mtr.lst
#    Object file  =  
#        F:\iar\NC136B-320
#        IC卡模块\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_comm_mtr.o
#
###############################################################################

F:\iar\NC136B-320 IC卡模块\Software\APP\comm\app_comm_mtr.c
      1          
      2          /*******************************************************************************
      3           *   Filename:       app_comm_mtr.c
      4           *   Revised:        All copyrights reserved to wumingshen.
      5           *   Revision:       v1.0
      6           *   Writer:	     redmorningcn.
      7           *
      8           *   Description:    双击选中 comm 按 Ctrl + H, 钩选 Match the case, Replace with
      9           *                   输入您要的名字，点击 Replace All
     10           *                   双击选中 Comm 按 Ctrl + H, 钩选 Match the case, Replace with
     11           *                   输入您要的名字，点击 Replace All
     12           *                   双击选中 COMM 按 Ctrl + H, 钩选 Match the case, Replace with
     13           *                   输入您要的名字，点击 Replace All
     14           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_COMM_PRIO     ）
     15           *                                            和 任务堆栈（ APP_TASK_COMM_STK_SIZE ）大小
     16           *
     17           *   Notes:
     18           *     				E-mail: redmorningcn@qq.com
     19           *
     20           *******************************************************************************/
     21          
     22          /*******************************************************************************
     23           * INCLUDES
     24           */
     25          #define  SNL_APP_SOURCE
     26          #include <includes.h>
     27          #include <app_comm_protocol.h>
     28          #include <app_ctrl.h>
     29          #include <app.h>
     30          #include <os_cfg_app.h>
     31          
     32          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     33          const  CPU_CHAR  *app_comm_mtr__c = "$Id: $";
     34          #endif
     35          
     36          #define APP_TASK_COMM_EN     DEF_ENABLED
     37          #if APP_TASK_COMM_EN == DEF_ENABLED
     38          /*******************************************************************************
     39           * CONSTANTS
     40           */
     41          
     42          /*******************************************************************************
     43           * MACROS
     44           */
     45          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     46          
     47          /*******************************************************************************
     48           * TYPEDEFS
     49           */
     50          
     51          
     52          /*******************************************************************************
     53           * LOCAL VARIABLES
     54           */
     55          
     56          /*******************************************************************************
     57           * GLOBAL VARIABLES
     58           */
     59          
     60          /***********************************************
     61          * 描述： 软定时器声明
     62          */
     63          
     64          /***********************************************
     65          * 描述： 软定时器回调函数
     66          */
     67          
     68          
     69          /*******************************************************************************
     70           * LOCAL FUNCTIONS
     71           */
     72          
     73          
     74          
     75          /*******************************************************************************
     76           * GLOBAL FUNCTIONS
     77           */
     78          
     79          /*******************************************************************************
     80           * EXTERN VARIABLES
     81           */
     82          
     83           /*******************************************************************************
     84           * EXTERN FUNCTIONS
     85           */
     86          
     87          /*******************************************************************************/
     88          
     89          
     90          /*******************************************************************************
     91           * 名    称： app_comm_mtr
     92           * 功    能： 调用油尺通讯处理函数。
     93           *            如果是定时器超时，则对应地址的timeout计算加1，并判断
     94           *            值是否到满足该地址故障判断次数，是否执行通讯异常处理。
     95           *            如果是接收到数据事件，则根据接收数据进行处理。
     96           * 入口参数： 无
     97           * 出口参数： 无
     98           * 作　 　者： redmorningcn.
     99           * 创建日期： 2017-05-18
    100           * 修    改：
    101           * 修改日期：
    102           * 备    注： 任务创建函数需要在app.h文件中声明
    103           *******************************************************************************/
    104          void    app_comm_mtr(void)
    105          {
    106              //判断对应地址连接是否接收到数据
    107              static  uint8   sendtimes = 0;
    108              uint8 i = 0;
    109              while(i < COMM_DEV_MTR_CONN_NUM){
    110                  if(sCtrl.Mtr.ConnCtrl[i].RecvEndFlg ==  1 )   //如果地址i接收到数据，对数据进行处理
    111                  {
    112                      /***********************************************
    113                      * 描述： 从接收的revcbuf中取数据
    114                      */
    115                      
    116                      if(sCtrl.Mtr.RxCtrl.SourceAddr == SLAVE_ADDR_DIP1)    //测量装置1，
    117                      {
    118                          //高度
    119                          sCtrl.sRec.Myhig1   =   sCtrl.Mtr.Rd.sRecv.Hight/256 
    120                                              +   (sCtrl.Mtr.Rd.sRecv.Hight %256)*256;   
    121                          //密度值
    122                          sCtrl.sRec.MyDip1Den=    sCtrl.Mtr.Rd.sRecv.Density/256 
    123                                              +   (sCtrl.Mtr.Rd.sRecv.Density %256)*256;   
    124                      }
    125                      
    126                      if(sCtrl.Mtr.RxCtrl.SourceAddr == SLAVE_ADDR_DIP2)    //测量装置2，
    127                      {   //高度值    
    128                          sCtrl.sRec.Myhig2   =   sCtrl.Mtr.Rd.sRecv.Hight/256 
    129                                                  +   (sCtrl.Mtr.Rd.sRecv.Hight %256)*256;      
    130                          //密度
    131                          sCtrl.sRec.MyDip2Den=   sCtrl.Mtr.Rd.sRecv.Density/256 
    132                                              +   (sCtrl.Mtr.Rd.sRecv.Density %256)*256;   
    133                      }
    134                      
    135                      sCtrl.Mtr.ConnCtrl[i].RecvEndFlg = 0;                   
    136                      sCtrl.Mtr.ConnCtrl[i].TimeOut    = 0; 
    137                      
    138                      return  ;
    139                  }
    140                  
    141                  i++;
    142              }
    143           
    144              /***********************************************
    145              * 描述： 如果是超时。
    146              *1. 超时时，所有地址计算加1，对应计算器在收到数据时清零。
    147              *2. 发送下个地址的数据。
    148              */
    149              if( sCtrl.Os.CommEvtFlag |  COMM_EVT_FLAG_MTR_TIMEOUT){
    150                  uint8 i = 0;
    151                  while( i < COMM_DEV_MTR_CONN_NUM){
    152                      sCtrl.Mtr.ConnCtrl[i].TimeOut++;
    153                      //超时数大于10次，5S，报通讯错误。
    154                      if(sCtrl.Mtr.ConnCtrl[i].TimeOut > 10 * COMM_DEV_MTR_CONN_NUM){
    155                          
    156                          sCtrl.Mtr.ConnCtrl[i].TimeOut = 10 * COMM_DEV_MTR_CONN_NUM + 1;
    157                          sCtrl.Mtr.ConnCtrl[i].ErrFlg = 1;       
    158                          
    159                          //数据清零
    160                          if(sCtrl.Mtr.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_DIP1)  
    161                              sCtrl.sRec.Myhig1 = 0;
    162          
    163                          if(sCtrl.Mtr.ConnCtrl[i].SlaveAddr == SLAVE_ADDR_DIP2)  
    164                              sCtrl.sRec.Myhig2 = 0;                
    165                      }else{
    166                          //接收到数据，通讯清零
    167                          sCtrl.Mtr.ConnCtrl[i].ErrFlg = 0;                       
    168                      }
    169                      
    170                      i++;
    171                  }
    172                  
    173                  /***********************************************
    174                  * 描述： 如果是超时。
    175                  * 发送下个地址的数据。准备数据，发送下一个数据。
    176                  */ 
    177                  //前4位是油量，高低位掉头
    178                  sCtrl.Mtr.Wr.Buf[0] = sCtrl.sRec.MstDip>>24;
    179                  sCtrl.Mtr.Wr.Buf[1] = sCtrl.sRec.MstDip>>16;
    180                  sCtrl.Mtr.Wr.Buf[2] = sCtrl.sRec.MstDip>>8;
    181                  sCtrl.Mtr.Wr.Buf[3] = sCtrl.sRec.MstDip>>0;
    182          
    183                  sCtrl.Mtr.Wr.StrSend.Speed = 0;
    184                  sCtrl.Mtr.Wr.StrSend.Accelerations = 0;
    185                  sCtrl.Mtr.Wr.StrSend.Density = 0;
    186                  //sCtrl.Mtr.Wr.StrSend.Work = 0;
    187                  //sCtrl.Mtr.Wr.StrSend.Rsv = 0;
    188                  
    189                  
    190                                          //需增加串口是否占用判断。    查询标示将会 影响通讯效率（等待调度），采用信号量 （接收开始时（接收计数器为0）
    191                                          //，占用串口；在接收超时时，释放信号）
    192                  sendtimes++;            //发送次数，用于切换地址
    193                  //sendtimes = 0;
    194                  CSNC_SendData(sCtrl.Mtr.pch,                                                        //MTR 的PCH：串口号，收发控制等底层信息
    195                                sCtrl.Mtr.ConnCtrl[sendtimes % COMM_DEV_MTR_CONN_NUM].MasterAddr,     //源地址，
    196                                sCtrl.Mtr.ConnCtrl[sendtimes % COMM_DEV_MTR_CONN_NUM].SlaveAddr,      //目标地址
    197                                sendtimes/COMM_DEV_MTR_CONN_NUM,                                      //帧序号
    198                                0,                                                                    //命令字
    199                                (uint8 *)&sCtrl.Mtr.Wr.StrSend,                                       //数据区
    200                                sizeof(sCtrl.Mtr.Wr.StrSend)                                         //发送长度
    201                                );
    202                  return;
    203              }
    204          }
    205          
    206          
    207          /*******************************************************************************
    208           * 				end of file
    209           *******************************************************************************/
    210          #endif

Errors: 33
Warnings: none
