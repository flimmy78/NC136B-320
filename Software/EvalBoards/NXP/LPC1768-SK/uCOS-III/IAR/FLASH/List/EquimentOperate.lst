###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       14/Dec/2017  10:49:32
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Application\Library\EquipmentOperations\EquimentOperate.c
#    Command line =  
#        "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Application\Library\EquipmentOperations\EquimentOperate.c"
#        -lCN "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List"
#        --diag_suppress Pa050 -o "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\" -I
#        "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\"
#        -I "F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\"
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\EquimentOperate.lst
#    Object file  =  
#        F:\iar\NC136B-320
#        IC¿¨Ä£¿é\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\EquimentOperate.o
#
###############################################################################

F:\iar\NC136B-320 IC¿¨Ä£¿é\Application\Library\EquipmentOperations\EquimentOperate.c
      1          #include    "includes.h"
      2          #include    "bsp_FRAM.h"
      3          
      4          

   \                                 In section .text, align 2, keep-with-next
      5          uint8	SetDen(short density)
      6          {
   \                     SetDen: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x0004             MOVS     R4,R0
      7          	stcDensity	sDensity;						//ÃÜ¶È
      8          	uint16		CrcCheck;
      9          
     10          	sDensity.Density = density ;
   \   00000006   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000008   0x9402             STR      R4,[SP, #+8]
     11          	
     12          	CrcCheck = GetCrc16Check((uint8 *)&sDensity,sizeof(sDensity) - 2);
   \   0000000A   0x2116             MOVS     R1,#+22
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x.... 0x....      BL       GetCrc16Check
   \   00000012   0x0005             MOVS     R5,R0
     13          	
     14          	sDensity.CrcCheck = CrcCheck;
   \   00000014   0xF8AD 0x5016      STRH     R5,[SP, #+22]
     15          			
     16          	if(StoreDensity((stcDensity *)&sDensity))
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x.... 0x....      BL       StoreDensity
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD017             BEQ.N    ??SetDen_0
     17          	{
     18          		DisplaySet(100,1,"         ");
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable7_4
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x2064             MOVS     R0,#+100
   \   0000002A   0x.... 0x....      BL       DisplaySet
     19          		DisplaySet(250,1,"D-%d",sDensity.Density);
   \   0000002E   0x9B02             LDR      R3,[SP, #+8]
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable7_5
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x20FA             MOVS     R0,#+250
   \   00000038   0x.... 0x....      BL       DisplaySet
     20          		DisplaySet(100,1,"         ");
   \   0000003C   0x....             LDR.N    R2,??DataTable7_4
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x2064             MOVS     R0,#+100
   \   00000042   0x.... 0x....      BL       DisplaySet
     21          		
     22          		printfcom0("\r\n ÉèÖÃµÄÃÜ¶ÈÖµ %d",sDensity.Density);
   \   00000046   0x9902             LDR      R1,[SP, #+8]
   \   00000048   0x....             LDR.N    R0,??DataTable7_6
   \   0000004A   0x.... 0x....      BL       printfcom0
     23          //		SetSucceedIndicate();	
     24          		
     25          		return	1;
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0xE000             B.N      ??SetDen_1
     26          	}
     27          	else
     28          	{
     29          //		StoreErrIndicate();	
     30          		
     31          		return	0;
   \                     ??SetDen_0: (+1)
   \   00000052   0x2000             MOVS     R0,#+0
   \                     ??SetDen_1: (+1)
   \   00000054   0xB007             ADD      SP,SP,#+28
   \   00000056   0xBD30             POP      {R4,R5,PC}       ;; return
     32          	}
     33          } 
     34          

   \                                 In section .text, align 2, keep-with-next
     35          uint8	SetCalcPara(uint32 calcpara)
     36          {
   \                     SetCalcPara: (+1)
   \   00000000   0x0001             MOVS     R1,R0
     37          //	if(StoreCalcPara(calcpara))
     38          //	{
     39          //		DisplaySet(100,1,"         ");
     40          //		DisplaySet(250,1,"C-%d",calcpara);
     41          //		DisplaySet(100,1,"         ");
     42          //		
     43          //		SetSucceedIndicate();	
     44          //		
     45          //		return	1;
     46          //	}
     47          //	else
     48          //	{
     49          //		StoreErrIndicate();	
     50          //		
     51          		return	0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
     52          //	}
     53          } 
     54          

   \                                 In section .text, align 2, keep-with-next
     55          uint8	SetHight(short 	Hight)
     56          {
   \                     SetHight: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
     57          	stcReviseHight	sReviseHight;							//¸ß¶Èµ÷Õû
     58          	uint16		CrcCheck;
     59          	short       StoreHight; 
     60          		
     61          	if(ReadReviseHight((stcReviseHight *)&sReviseHight))
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       ReadReviseHight
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD003             BEQ.N    ??SetHight_0
     62          	{
     63          		StoreHight = sReviseHight.ReviseHight;
   \   00000010   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000014   0x0006             MOVS     R6,R0
   \   00000016   0xE001             B.N      ??SetHight_1
     64          	}
     65          	else
     66          	{
     67          		StoreHight = 0;
   \                     ??SetHight_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x0006             MOVS     R6,R0
     68          	}
     69          	
     70          	sReviseHight.ReviseHight = Hight;
   \                     ??SetHight_1: (+1)
   \   0000001C   0xF8AD 0x4000      STRH     R4,[SP, #+0]
     71          	
     72          	StoreHight = StoreHight + sReviseHight.ReviseHight;
   \   00000020   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000024   0x1986             ADDS     R6,R0,R6
     73          	 	
     74          	if(StoreHight > 500 ||  StoreHight < -500)
   \   00000026   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000028   0xF5B6 0x7FFA      CMP      R6,#+500
   \   0000002C   0xDC03             BGT.N    ??SetHight_2
   \   0000002E   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000030   0xF516 0x7FFA      CMN      R6,#+500
   \   00000034   0xDA1F             BGE.N    ??SetHight_3
     75          	{
     76          		if(StoreHight > 500)
   \                     ??SetHight_2: (+1)
   \   00000036   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000038   0xF5B6 0x7FFA      CMP      R6,#+500
   \   0000003C   0xDD17             BLE.N    ??SetHight_4
     77          		{
     78          			sReviseHight.ReviseHight = 500;
   \   0000003E   0xF44F 0x70FA      MOV      R0,#+500
   \   00000042   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     79          //			DisplaySet(60,2,"TO_H");
     80          //			DisplaySet(60,2,"    ");
     81                      if(g_DipDisVal)
   \   00000046   0x....             LDR.N    R0,??DataTable7_7
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD015             BEQ.N    ??SetHight_5
     82                      {
     83                          DisplaySet(60,1,"%u",g_DipDisVal % 10000);	//ÏÔÊ¾ÓÍÁ¿Öµ
   \   0000004E   0xF242 0x7010      MOVW     R0,#+10000
   \   00000052   0x....             LDR.N    R1,??DataTable7_7
   \   00000054   0x6809             LDR      R1,[R1, #+0]
   \   00000056   0x....             LDR.N    R2,??DataTable7_7
   \   00000058   0x6812             LDR      R2,[R2, #+0]
   \   0000005A   0xFBB2 0xF2F0      UDIV     R2,R2,R0
   \   0000005E   0xFB00 0x1312      MLS      R3,R0,R2,R1
   \   00000062   0x....             ADR.N    R2,??DataTable6  ;; 0x25, 0x75, 0x00, 0x00
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0x203C             MOVS     R0,#+60
   \   00000068   0x.... 0x....      BL       DisplaySet
   \   0000006C   0xE005             B.N      ??SetHight_5
     84                      }	
     85          //			DelayX10ms(60);
     86          		}
     87          		else
     88          		{
     89          			sReviseHight.ReviseHight = -500;
   \                     ??SetHight_4: (+1)
   \   0000006E   0x....             LDR.N    R0,??DataTable7_8  ;; 0xfffffe0c
   \   00000070   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000074   0xE001             B.N      ??SetHight_5
     90          //			DisplaySet(60,2,"TO_L");
     91          //			DisplaySet(60,2,"    ");
     92          //			DelayX10ms(250);					
     93          		}
     94          	}
     95          	else
     96          	{
     97          		sReviseHight.ReviseHight = StoreHight;
   \                     ??SetHight_3: (+1)
   \   00000076   0xF8AD 0x6000      STRH     R6,[SP, #+0]
     98          	}
     99          
    100          	CrcCheck = GetCrc16Check((uint8 *)&sReviseHight,sizeof(sReviseHight) - 2);
   \                     ??SetHight_5: (+1)
   \   0000007A   0x2102             MOVS     R1,#+2
   \   0000007C   0x4668             MOV      R0,SP
   \   0000007E   0x.... 0x....      BL       GetCrc16Check
   \   00000082   0x0005             MOVS     R5,R0
    101          	
    102          	sReviseHight.CrcCheck = CrcCheck;
   \   00000084   0xF8AD 0x5002      STRH     R5,[SP, #+2]
    103          
    104          	if(StoreReviseHight((stcReviseHight *)&sReviseHight))
   \   00000088   0x4668             MOV      R0,SP
   \   0000008A   0x.... 0x....      BL       StoreReviseHight
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD006             BEQ.N    ??SetHight_6
    105          	{
    106          //		DisplaySet(100,1,"         ");
    107          //		DisplaySet(250,1,"H %d.",sReviseHight.ReviseHight);
    108          //		DisplaySet(100,1,"         ");
    109                  
    110                  
    111                  printfcom0("\r\n ÉèÖÃµÄ¸ß¶ÈÖµ %d",sReviseHight.ReviseHight);
   \   00000092   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   00000096   0x....             LDR.N    R0,??DataTable7_9
   \   00000098   0x.... 0x....      BL       printfcom0
    112          
    113          //		SetSucceedIndicate();	
    114          		
    115          		return	1;
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0xE000             B.N      ??SetHight_7
    116          	}
    117          	else
    118          	{
    119          //		StoreErrIndicate();	
    120          		
    121          		return	0;
   \                     ??SetHight_6: (+1)
   \   000000A0   0x2000             MOVS     R0,#+0
   \                     ??SetHight_7: (+1)
   \   000000A2   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    122          	}
    123          } 
    124          

   \                                 In section .text, align 2, keep-with-next
    125          uint8	SetSel(uint8	ModelNum)
    126          {						
   \                     SetSel: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    127          	if(StoreSelectModel(ModelNum))
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       StoreSelectModel
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD012             BEQ.N    ??SetSel_0
    128          	{
    129          		DisplaySet(100,1,"         ");
   \   00000010   0x....             LDR.N    R2,??DataTable7_4
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2064             MOVS     R0,#+100
   \   00000016   0x.... 0x....      BL       DisplaySet
    130          		DisplaySet(250,1,"S-%d.",ModelNum);
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x0023             MOVS     R3,R4
   \   0000001E   0x....             LDR.N    R2,??DataTable7_10
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x20FA             MOVS     R0,#+250
   \   00000024   0x.... 0x....      BL       DisplaySet
    131          		DisplaySet(100,1,"         ");					
   \   00000028   0x....             LDR.N    R2,??DataTable7_4
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x2064             MOVS     R0,#+100
   \   0000002E   0x.... 0x....      BL       DisplaySet
    132          //		SetSucceedIndicate();	
    133          		
    134          		return	1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0xE000             B.N      ??SetSel_1
    135          	}
    136          	else
    137          	{
    138          //		StoreErrIndicate();	
    139          		
    140          		return	0;
   \                     ??SetSel_0: (+1)
   \   00000036   0x2000             MOVS     R0,#+0
   \                     ??SetSel_1: (+1)
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    141          	}
    142          }
    143          
    144          

   \                                 In section .text, align 2, keep-with-next
    145          uint8	SetFix(unsigned short 	locotype,unsigned short 	loconum)
    146          {
   \                     SetFix: (+1)
   \   00000000   0xE92D 0x43F3      PUSH     {R0,R1,R4-R9,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
    147          	stcFixInfo	sFixInfo;							//¸ß¶Èµ÷Õû
    148          	uint16		CrcCheck;
    149          		
    150          	memcpy((uint8 *)&sFixInfo.LocoTyp,(uint8 *)&locotype,sizeof(locotype));
   \   00000006   0x2502             MOVS     R5,#+2
   \   00000008   0xAE09             ADD      R6,SP,#+36
   \   0000000A   0xAF01             ADD      R7,SP,#+4
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x0031             MOVS     R1,R6
   \   00000010   0x0038             MOVS     R0,R7
   \   00000012   0x.... 0x....      BL       __aeabi_memcpy
    151          	memcpy((uint8 *)&sFixInfo.LocoNum,(uint8 *)&loconum,sizeof(loconum));
   \   00000016   0x2702             MOVS     R7,#+2
   \   00000018   0xF10D 0x0828      ADD      R8,SP,#+40
   \   0000001C   0xF10D 0x0906      ADD      R9,SP,#+6
   \   00000020   0x003A             MOVS     R2,R7
   \   00000022   0x4641             MOV      R1,R8
   \   00000024   0x4648             MOV      R0,R9
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy
    152          
    153          	DisplaySet(100,1,"         ");
   \   0000002A   0x....             LDR.N    R2,??DataTable7_4
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x2064             MOVS     R0,#+100
   \   00000030   0x.... 0x....      BL       DisplaySet
    154          	DisplaySet(250,1,"%4d.%4d",locotype,loconum);
   \   00000034   0xF8BD 0x0028      LDRH     R0,[SP, #+40]
   \   00000038   0x9000             STR      R0,[SP, #+0]
   \   0000003A   0xF8BD 0x3024      LDRH     R3,[SP, #+36]
   \   0000003E   0x....             LDR.N    R2,??DataTable7_11
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x20FA             MOVS     R0,#+250
   \   00000044   0x.... 0x....      BL       DisplaySet
    155          	DisplaySet(100,1,"         ");
   \   00000048   0x....             LDR.N    R2,??DataTable7_4
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x2064             MOVS     R0,#+100
   \   0000004E   0x.... 0x....      BL       DisplaySet
    156          
    157          	CrcCheck = GetCrc16Check((uint8 *)&sFixInfo,sizeof(sFixInfo) - 2);
   \   00000052   0x211A             MOVS     R1,#+26
   \   00000054   0xA801             ADD      R0,SP,#+4
   \   00000056   0x.... 0x....      BL       GetCrc16Check
   \   0000005A   0x0004             MOVS     R4,R0
    158          	sFixInfo.CrcCheck = CrcCheck;
   \   0000005C   0xF8AD 0x401E      STRH     R4,[SP, #+30]
    159          
    160          	if(StoreFixInfo((stcFixInfo *)&sFixInfo))
   \   00000060   0xA801             ADD      R0,SP,#+4
   \   00000062   0x.... 0x....      BL       StoreFixInfo
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD001             BEQ.N    ??SetFix_0
    161          	{
    162          //		SetSucceedIndicate();	
    163          		return	1;
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0xE000             B.N      ??SetFix_1
    164          	}
    165          	else
    166          	{
    167          //		StoreErrIndicate();	
    168          		return	0;
   \                     ??SetFix_0: (+1)
   \   0000006E   0x2000             MOVS     R0,#+0
   \                     ??SetFix_1: (+1)
   \   00000070   0xB00B             ADD      SP,SP,#+44
   \   00000072   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    169          	}
    170          } 
    171          
    172          

   \                                 In section .bss, align 1
    173          unsigned char l_modelcardflg = 0;
   \                     l_modelcardflg:
   \   00000000                      DS8 1
    174          

   \                                 In section .text, align 2, keep-with-next
    175          unsigned char GetModelCardFlg(void)
    176          {
    177          	return	l_modelcardflg;
   \                     GetModelCardFlg: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7_12
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    178          }
    179          

   \                                 In section .text, align 2, keep-with-next
    180          void ClearModelCardFlg(void)
    181          {
    182          	l_modelcardflg = 0;
   \                     ClearModelCardFlg: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable7_12
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    183          }
   \   00000006   0x4770             BX       LR               ;; return
    184          
    185          extern stcModelCard  m_sModelCard;
    186          
    187          #define		OIL_BOX_MODEL_ADDR				2000	//ÓÍÏäÄ£ÐÍµØÖ·

   \                                 In section .text, align 2, keep-with-next
    188          void	SetModel(unsigned char *buf,unsigned int Len)
    189          {
   \                     SetModel: (+1)
   \   00000000   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    190           	static	unsigned char *pmodel;
    191          
    192           	unsigned int   modeldatanum = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x9000             STR      R0,[SP, #+0]
    193          	unsigned int   readsize;	
    194          	unsigned int   datalen = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    195          	unsigned int   i;
    196          	uint32		ModelNumAdd;
    197          	uint8		ModelNum;	
    198          
    199          	datalen = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x4680             MOV      R8,R0
    200          			
    201          	memcpy((unsigned char *)&modeldatanum,&buf[datalen],sizeof(modeldatanum));
   \   00000014   0xF05F 0x0904      MOVS     R9,#+4
   \   00000018   0xEB18 0x0004      ADDS     R0,R8,R4
   \   0000001C   0x9002             STR      R0,[SP, #+8]
   \   0000001E   0x46EA             MOV      R10,SP
   \   00000020   0x464A             MOV      R2,R9
   \   00000022   0x9902             LDR      R1,[SP, #+8]
   \   00000024   0x4650             MOV      R0,R10
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy
    202          	datalen += sizeof(modeldatanum);
   \   0000002A   0xF118 0x0804      ADDS     R8,R8,#+4
    203          	
    204          	DisplaySet(50,1,"o..",modeldatanum);
   \   0000002E   0x9B00             LDR      R3,[SP, #+0]
   \   00000030   0x....             ADR.N    R2,??DataTable7  ;; "o.."
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x2032             MOVS     R0,#+50
   \   00000036   0x.... 0x....      BL       DisplaySet
    205          	DisplaySet(50,1,"...",modeldatanum);
   \   0000003A   0x9B00             LDR      R3,[SP, #+0]
   \   0000003C   0x....             ADR.N    R2,??DataTable7_1  ;; "..."
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x2032             MOVS     R0,#+50
   \   00000042   0x.... 0x....      BL       DisplaySet
    206          
    207          	if(modeldatanum == 0)
   \   00000046   0x9800             LDR      R0,[SP, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD10C             BNE.N    ??SetModel_0
    208          	{
    209          	   pmodel = (unsigned char *)&m_sModelCard;
   \   0000004C   0x....             LDR.N    R0,??DataTable7_13
   \   0000004E   0x....             LDR.N    R1,??DataTable7_14
   \   00000050   0x6008             STR      R0,[R1, #+0]
    210          	   printfcom0("\r\n Ö¸ÕëÉèÖµ pmodel %x,sizeof(m_sModelCard) %d",pmodel,sizeof(m_sModelCard));
   \   00000052   0xF241 0x7244      MOVW     R2,#+5956
   \   00000056   0x....             LDR.N    R0,??DataTable7_14
   \   00000058   0x6801             LDR      R1,[R0, #+0]
   \   0000005A   0x....             LDR.N    R0,??DataTable7_15
   \   0000005C   0x.... 0x....      BL       printfcom0
    211          	   l_modelcardflg = 1;
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x....             LDR.N    R1,??DataTable7_12
   \   00000064   0x7008             STRB     R0,[R1, #+0]
    212          	}
    213          	
    214          	readsize	= 128<(Len-datalen)?128:(Len-datalen);
   \                     ??SetModel_0: (+1)
   \   00000066   0xEBB5 0x0008      SUBS     R0,R5,R8
   \   0000006A   0x2881             CMP      R0,#+129
   \   0000006C   0xD302             BCC.N    ??SetModel_1
   \   0000006E   0xF05F 0x0B80      MOVS     R11,#+128
   \   00000072   0xE001             B.N      ??SetModel_2
   \                     ??SetModel_1: (+1)
   \   00000074   0xEBB5 0x0B08      SUBS     R11,R5,R8
    215          	memcpy(pmodel,&buf[datalen],readsize);
   \                     ??SetModel_2: (+1)
   \   00000078   0xEB18 0x0904      ADDS     R9,R8,R4
   \   0000007C   0x....             LDR.N    R0,??DataTable7_14
   \   0000007E   0xF8D0 0xA000      LDR      R10,[R0, #+0]
   \   00000082   0x465A             MOV      R2,R11
   \   00000084   0x4649             MOV      R1,R9
   \   00000086   0x4650             MOV      R0,R10
   \   00000088   0x.... 0x....      BL       __aeabi_memcpy
    216          	
    217          	StoreOilBoxModel(pmodel - (unsigned char *)&m_sModelCard,&buf[datalen],readsize);
   \   0000008C   0x465A             MOV      R2,R11
   \   0000008E   0xEB18 0x0104      ADDS     R1,R8,R4
   \   00000092   0x....             LDR.N    R0,??DataTable7_14
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x....             LDR.N    R3,??DataTable7_13
   \   00000098   0x1AC0             SUBS     R0,R0,R3
   \   0000009A   0x.... 0x....      BL       StoreOilBoxModel
    218          	pmodel += readsize;
   \   0000009E   0x....             LDR.N    R0,??DataTable7_14
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xEB1B 0x0000      ADDS     R0,R11,R0
   \   000000A6   0x....             LDR.N    R1,??DataTable7_14
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    219          
    220          	printfcom0("\r\n pmodel - (unsigned char *)&m_sModelCard %d",pmodel - (unsigned char *)&m_sModelCard);
   \   000000AA   0x....             LDR.N    R0,??DataTable7_14
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x....             LDR.N    R1,??DataTable7_13
   \   000000B0   0x1A41             SUBS     R1,R0,R1
   \   000000B2   0x....             LDR.N    R0,??DataTable7_16
   \   000000B4   0x.... 0x....      BL       printfcom0
    221          	
    222          	if(modeldatanum == 0xffffffff)
   \   000000B8   0x9800             LDR      R0,[SP, #+0]
   \   000000BA   0xF110 0x0F01      CMN      R0,#+1
   \   000000BE   0xD16B             BNE.N    ??SetModel_3
    223          	{
    224          		DisplaySet(5,1,"         ");
   \   000000C0   0x....             LDR.N    R2,??DataTable7_4
   \   000000C2   0x2101             MOVS     R1,#+1
   \   000000C4   0x2005             MOVS     R0,#+5
   \   000000C6   0x.... 0x....      BL       DisplaySet
    225          		DisplaySet(50,1,"boX");		
   \   000000CA   0x....             ADR.N    R2,??DataTable7_2  ;; "boX"
   \   000000CC   0x2101             MOVS     R1,#+1
   \   000000CE   0x2032             MOVS     R0,#+50
   \   000000D0   0x.... 0x....      BL       DisplaySet
    226          		
    227          		l_modelcardflg = 0;
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x....             LDR.N    R1,??DataTable7_12
   \   000000D8   0x7008             STRB     R0,[R1, #+0]
    228          		
    229          		printfcom0("\r\n Ä£ÐÍ½áÊø sModel µãÊý£¬±àºÅ %d,%d",m_sModelCard.sModelSemple[1].PotNum,m_sModelCard.sModelSemple[1].ModelNum );
   \   000000DA   0x....             LDR.N    R0,??DataTable7_13
   \   000000DC   0xF890 0x2EFC      LDRB     R2,[R0, #+3836]
   \   000000E0   0x....             LDR.N    R0,??DataTable7_13
   \   000000E2   0xF8B0 0x1EF8      LDRH     R1,[R0, #+3832]
   \   000000E6   0x....             LDR.N    R0,??DataTable7_17
   \   000000E8   0x.... 0x....      BL       printfcom0
    230          		for(i = 0; i< m_sModelCard.sModelSemple[1].PotNum;i++)
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x0006             MOVS     R6,R0
   \                     ??SetModel_4: (+1)
   \   000000F0   0x....             LDR.N    R0,??DataTable7_13
   \   000000F2   0xF8B0 0x0EF8      LDRH     R0,[R0, #+3832]
   \   000000F6   0x4286             CMP      R6,R0
   \   000000F8   0xD20E             BCS.N    ??SetModel_5
    231          		{
    232          			printfcom0("\r\n ¸ß¶È£¬ÓÍÁ¿ %d,%d",m_sModelCard.sModelSemple[1].sModPot[i].HigVal,m_sModelCard.sModelSemple[1].sModPot[i].DipVal ); 
   \   000000FA   0x....             LDR.N    R0,??DataTable7_13
   \   000000FC   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000100   0xF8B0 0x2ED2      LDRH     R2,[R0, #+3794]
   \   00000104   0x....             LDR.N    R0,??DataTable7_13
   \   00000106   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   0000010A   0xF8B0 0x1ED0      LDRH     R1,[R0, #+3792]
   \   0000010E   0x....             LDR.N    R0,??DataTable7_18
   \   00000110   0x.... 0x....      BL       printfcom0
    233          		}
   \   00000114   0x1C76             ADDS     R6,R6,#+1
   \   00000116   0xE7EB             B.N      ??SetModel_4
    234          
    235          		for( i = 0;i < 64;i++)
   \                     ??SetModel_5: (+1)
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x0006             MOVS     R6,R0
   \                     ??SetModel_6: (+1)
   \   0000011C   0x2E40             CMP      R6,#+64
   \   0000011E   0xD210             BCS.N    ??SetModel_7
    236          		{
    237          			printfcom0("\r\n ±àºÅ %d,%d",m_sModelCard.sModelSemple[i].ModelNum ,m_sModelCard.sModelSemple[i].PotNum); 
   \   00000120   0x....             LDR.N    R0,??DataTable7_13
   \   00000122   0x2130             MOVS     R1,#+48
   \   00000124   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000128   0xF8B0 0x2EC8      LDRH     R2,[R0, #+3784]
   \   0000012C   0x....             LDR.N    R0,??DataTable7_13
   \   0000012E   0x2130             MOVS     R1,#+48
   \   00000130   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000134   0xF890 0x1ECC      LDRB     R1,[R0, #+3788]
   \   00000138   0x....             LDR.N    R0,??DataTable7_19
   \   0000013A   0x.... 0x....      BL       printfcom0
    238          		}
   \   0000013E   0x1C76             ADDS     R6,R6,#+1
   \   00000140   0xE7EC             B.N      ??SetModel_6
    239          
    240          	  for(i = 0; i < 46;i++)
   \                     ??SetModel_7: (+1)
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x0006             MOVS     R6,R0
   \                     ??SetModel_8: (+1)
   \   00000146   0x2E2E             CMP      R6,#+46
   \   00000148   0xD212             BCS.N    ??SetModel_9
    241          	  {
    242          		  ModelNumAdd =  OIL_BOX_MODEL_ADDR + sizeof(stcModel)*18 
    243          		  				+ sizeof(stcModelSemple)*i + sizeof(stcModPot)*10 + 2 + 2;
   \   0000014A   0x2030             MOVS     R0,#+48
   \   0000014C   0xF241 0x619C      MOVW     R1,#+5788
   \   00000150   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000154   0x0007             MOVS     R7,R0
    244          
    245          		  ReadFM24CL64(ModelNumAdd,(uint8 *)&ModelNum, sizeof(ModelNum));
   \   00000156   0x2201             MOVS     R2,#+1
   \   00000158   0xA901             ADD      R1,SP,#+4
   \   0000015A   0x0038             MOVS     R0,R7
   \   0000015C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000015E   0x.... 0x....      BL       ReadFM24CL64
    246          
    247          	      printfcom0("\r\n ModelNum %d",ModelNum); 
   \   00000162   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   00000166   0x....             LDR.N    R0,??DataTable7_20
   \   00000168   0x.... 0x....      BL       printfcom0
    248          	  }
   \   0000016C   0x1C76             ADDS     R6,R6,#+1
   \   0000016E   0xE7EA             B.N      ??SetModel_8
    249          		ClaerDisplaySetWithoutStore();
   \                     ??SetModel_9: (+1)
   \   00000170   0x.... 0x....      BL       ClaerDisplaySetWithoutStore
    250          
    251          		printfcom0("\r\n modeldatanum %d",modeldatanum);
   \   00000174   0x9900             LDR      R1,[SP, #+0]
   \   00000176   0x....             LDR.N    R0,??DataTable7_21
   \   00000178   0x.... 0x....      BL       printfcom0
    252          		DisplaySet(20,1,"         ");
   \   0000017C   0x....             LDR.N    R2,??DataTable7_4
   \   0000017E   0x2101             MOVS     R1,#+1
   \   00000180   0x2014             MOVS     R0,#+20
   \   00000182   0x.... 0x....      BL       DisplaySet
    253          		DisplaySet(50,1,"BOX");
   \   00000186   0x....             ADR.N    R2,??DataTable7_3  ;; "BOX"
   \   00000188   0x2101             MOVS     R1,#+1
   \   0000018A   0x2032             MOVS     R0,#+50
   \   0000018C   0x.... 0x....      BL       DisplaySet
    254          		
    255          		DelayX10ms(300);
   \   00000190   0xF44F 0x7096      MOV      R0,#+300
   \   00000194   0x.... 0x....      BL       DelayX10ms
    256          	}
    257          }
   \                     ??SetModel_3: (+1)
   \   00000198   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return

   \                                 In section .bss, align 4
   \                     ??pmodel:
   \   00000000                      DS8 4
    258          //
    259          //uint8	ComSendData(unsigned int startnum, unsigned int endnum)
    260          //{
    261          //	uint32	FlshStartRecNum;
    262          ////	uint32	CardMaxRecNum;
    263          //	uint32	NoReadRecNum;
    264          //	uint32	lstrecnum = 0;
    265          //
    266          //	stcFlshRec		sFlshRec;
    267          //
    268          //	unsigned int startrec;
    269          //	unsigned int endrec;
    270          //
    271          //	g_LshRedFlshRecNum 		= ReadLstRedFlshRecNum();
    272          ////	g_LshRedFlshRecNum_gprs = ReadLstRedFlshRecNum_gprs();
    273          //
    274          ////	if(GetRecaddr() == 0xC1)
    275          //	{
    276          //		lstrecnum = g_LshRedFlshRecNum;
    277          //	}
    278          //
    279          ////	if(GetRecaddr() == 0xC2)
    280          ////	{
    281          ////		lstrecnum = g_LshRedFlshRecNum_gprs;
    282          ////	}
    283          ////	
    284          ////	printfcom0("\r\n 11 startnum %d,endnum %d",startnum,endnum);
    285          //	
    286          //	startrec = lstrecnum > startnum?startnum:lstrecnum;
    287          //	endrec   = g_CurFlshRecNum > endnum?endnum:g_CurFlshRecNum;
    288          //
    289          //
    290          ////	printfcom0("\r\n startrec %d, g_LshRedFlshRecNum %d, startnum %d  ",startrec,g_LshRedFlshRecNum,startnum);
    291          ////	printfcom0("\r\n endrec %d, g_CurFlshRecNum %d, endnum %d  ",endrec,g_CurFlshRecNum,endnum);
    292          //	
    293          //
    294          ////	printfcom0("\r\n 22 startnum %d,endnum %d",startnum,endnum);
    295          //
    296          //	if(endrec > startrec)
    297          //	{
    298          //		if(g_CurFlshRecNum > (FLSH_MAX_SIZE)/(sizeof(stcFlshRec)) )
    299          //		{
    300          //			startrec = g_CurFlshRecNum -  (FLSH_MAX_SIZE)/(sizeof(stcFlshRec));
    301          //		}
    302          //		if(endrec > startrec)
    303          //		{
    304          //			NoReadRecNum	= (endrec - startrec);							//FlshµÄÎ´¶Á¼ÇÂ¼³¤¶È
    305          //		}
    306          //		else
    307          //		{
    308          //			NoReadRecNum = 1;				
    309          //		}
    310          //	}
    311          //	else
    312          //	{
    313          //		NoReadRecNum = 0;
    314          ////		if(GetRecaddr() == 0xC1)
    315          //		{
    316          //			StoreLstRedFlshRecNum(g_CurFlshRecNum);				//´æ×îÐÂµÄÒÑ¶Á¼ÇÂ¼Á÷Ë®ºÅ
    317          //		}
    318          //
    319          ////		if(GetRecaddr() == 0xC2)
    320          ////		{
    321          ////			StoreLstRedFlshRecNum_gprs(g_CurFlshRecNum);				//´æ×îÐÂµÄÒÑ¶Á¼ÇÂ¼Á÷Ë®ºÅ
    322          ////		}
    323          //		return 0;
    324          //	}
    325          //	
    326          //	
    327          ////	CardMaxRecNum = 0xffffffff;		
    328          ////	NoReadRecNum  = GetReadFlshRecCnt(NoReadRecNum,CardMaxRecNum);	//ÒªÐ´Êý¾Ý³¤¶È
    329          //	
    330          ////	FlshStartRecNum = endrec  - NoReadRecNum ;
    331          //	FlshStartRecNum = startrec;
    332          //		
    333          //	printfcom0("\r\n FlshStartRecNum %d,%d",FlshStartRecNum,NoReadRecNum);
    334          //				
    335          ////	while( NoReadRecNum--)
    336          //	{
    337          //		ReadFlshRec((stcFlshRec *)&sFlshRec,FlshStartRecNum);
    338          //
    339          //		DataSend_CSNR(0x80,GetRecaddr(),(stcFlshRec *)&sFlshRec,sizeof(sFlshRec));	
    340          //		
    341          ////		DelayX10ms(2);				
    342          ////    ReadCardDisplay(0);										//Ö¸Ê¾ÕýÔÚ¶Á¿¨
    343          //	}
    344          //
    345          ////   	printfcom0("\r\n GetRecaddr() %x",GetRecaddr());
    346          //	if(GetRecaddr() == 0xC1)
    347          //	{
    348          //		g_LshRedFlshRecNum++;				//
    349          //		StoreLstRedFlshRecNum(g_LshRedFlshRecNum);
    350          //	}
    351          ////	if(GetRecaddr() == 0xC2)
    352          ////	{
    353          ////		g_LshRedFlshRecNum_gprs++;				//
    354          ////		StoreLstRedFlshRecNum(g_LshRedFlshRecNum_gprs);
    355          ////	}
    356          //
    357          //	return 1;
    358          //} 
    359          

   \                                 In section .text, align 2, keep-with-next
    360          void  printfcom2flshrec(void)
    361          {
   \                     printfcom2flshrec: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0A1             SUB      SP,SP,#+132
    362          	static	uint32	FlshStartRecNum = 0;
    363          	stcFlshRec		sFlshRec;
    364          
    365          	ReadFlshRec((stcFlshRec *)&sFlshRec,FlshStartRecNum++);
   \   00000004   0x....             LDR.N    R0,??DataTable7_22
   \   00000006   0x6801             LDR      R1,[R0, #+0]
   \   00000008   0x1C48             ADDS     R0,R1,#+1
   \   0000000A   0x....             LDR.N    R2,??DataTable7_22
   \   0000000C   0x6010             STR      R0,[R2, #+0]
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x.... 0x....      BL       ReadFlshRec
    366          	
    367          //	printfcom2("\r\n %02d-%02d-%02d %02d:%02d:%02d,%d,%d,%d\r\n ",sFlshRec.MyYear,sFlshRec.MyMonth,sFlshRec.MyData,sFlshRec.MyHour,sFlshRec.MyMinute,
    368          //	sFlshRec.MySecond,sFlshRec.Myhig1,sFlshRec.Myhig2,sFlshRec.MstDip);
    369          }
   \   00000014   0xB021             ADD      SP,SP,#+132
   \   00000016   0xBD00             POP      {PC}             ;; return

   \                                 In section .bss, align 4
   \                     ??FlshStartRecNum:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x25 0x75          DC8      0x25, 0x75, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x6F 0x2E          DC8      "o.."
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x2E 0x2E          DC8      "..."
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x62 0x6F          DC8      "boX"
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x42 0x4F          DC8      "BOX"
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     g_DipDisVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     l_modelcardflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     m_sModelCard

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     ??pmodel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_21:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_22:
   \   00000000   0x........         DC32     ??FlshStartRecNum

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x20 0x20          DC8 "         "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x44 0x2D          DC8 "D-%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \311\350\326\303\265\304\303\334\266\310\326\265 %d"
   \              0x20 0xC9    
   \              0xE8 0xD6    
   \              0xC3 0xB5    
   \              0xC4 0xC3    
   \              0xDC 0xB6    
   \              0xC8 0xD6    
   \              0xB5 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x75          DC8 "%u"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \311\350\326\303\265\304\270\337\266\310\326\265 %d"
   \              0x20 0xC9    
   \              0xE8 0xD6    
   \              0xC3 0xB5    
   \              0xC4 0xB8    
   \              0xDF 0xB6    
   \              0xC8 0xD6    
   \              0xB5 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x53 0x2D          DC8 "S-%d."
   \              0x25 0x64    
   \              0x2E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x25 0x34          DC8 "%4d.%4d"
   \              0x64 0x2E    
   \              0x25 0x34    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x6F 0x2E          DC8 "o.."
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x2E 0x2E          DC8 "..."
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \326\270\325\353\311\350\326\265 pmodel %x,sizeof(m_sModelCard) %d"
   \              0x20 0xD6    
   \              0xB8 0xD5    
   \              0xEB 0xC9    
   \              0xE8 0xD6    
   \              0xB5 0x20    
   \              0x70 0x6D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x20 0x25    
   \              0x78 0x2C    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x6F 0x66    
   \              0x28 0x6D    
   \              0x5F 0x73    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x43    
   \              0x61 0x72    
   \              0x64 0x29    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x0D 0x0A          DC8 "\015\012 pmodel - (unsigned char *)&m_sModelCard %d"
   \              0x20 0x70    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x20    
   \              0x2D 0x20    
   \              0x28 0x75    
   \              0x6E 0x73    
   \              0x69 0x67    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x63 0x68    
   \              0x61 0x72    
   \              0x20 0x2A    
   \              0x29 0x26    
   \              0x6D 0x5F    
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x43 0x61    
   \              0x72 0x64    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x62 0x6F          DC8 "boX"
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \304\243\320\315\275\341\312\370 sModel \265\343\312\375\243\254\261\340\272\305 %d,%d"
   \              0x20 0xC4    
   \              0xA3 0xD0    
   \              0xCD 0xBD    
   \              0xE1 0xCA    
   \              0xF8 0x20    
   \              0x73 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x20 0xB5    
   \              0xE3 0xCA    
   \              0xFD 0xA3    
   \              0xAC 0xB1    
   \              0xE0 0xBA    
   \              0xC5 0x20    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \270\337\266\310\243\254\323\315\301\277 %d,%d"
   \              0x20 0xB8    
   \              0xDF 0xB6    
   \              0xC8 0xA3    
   \              0xAC 0xD3    
   \              0xCD 0xC1    
   \              0xBF 0x20    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x0D 0x0A          DC8 "\015\012 \261\340\272\305 %d,%d"
   \              0x20 0xB1    
   \              0xE0 0xBA    
   \              0xC5 0x20    
   \              0x25 0x64    
   \              0x2C 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x0D 0x0A          DC8 "\015\012 ModelNum %d"
   \              0x20 0x4D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x4E 0x75    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x0D 0x0A          DC8 "\015\012 modeldatanum %d"
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x6C    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x6E 0x75    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x4F          DC8 "BOX"
   \              0x58 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClearModelCardFlg
       0   GetModelCardFlg
       0   SetCalcPara
      40   SetDen
        40   -> DisplaySet
        40   -> GetCrc16Check
        40   -> StoreDensity
        40   -> printfcom0
      72   SetFix
        72   -> DisplaySet
        72   -> GetCrc16Check
        72   -> StoreFixInfo
        72   -> __aeabi_memcpy
      24   SetHight
        24   -> DisplaySet
        24   -> GetCrc16Check
        24   -> ReadReviseHight
        24   -> StoreReviseHight
        24   -> printfcom0
      48   SetModel
        48   -> ClaerDisplaySetWithoutStore
        48   -> DelayX10ms
        48   -> DisplaySet
        48   -> ReadFM24CL64
        48   -> StoreOilBoxModel
        48   -> __aeabi_memcpy
        48   -> printfcom0
       8   SetSel
         8   -> DisplaySet
         8   -> StoreSelectModel
     136   printfcom2flshrec
       136   -> ReadFlshRec


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_21
       4  ??DataTable7_22
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      12  ?_0
       8  ?_1
      48  ?_10
       4  ?_11
      36  ?_12
      20  ?_13
      16  ?_14
      16  ?_15
      20  ?_16
       4  ?_17
      20  ?_2
       4  ?_3
      20  ?_4
       8  ?_5
       8  ?_6
       4  ?_7
       4  ?_8
      48  ?_9
       8  ClearModelCardFlg
       4  FlshStartRecNum
       6  GetModelCardFlg
       6  SetCalcPara
      88  SetDen
     118  SetFix
     164  SetHight
     412  SetModel
      58  SetSel
       1  l_modelcardflg
       4  pmodel
      24  printfcom2flshrec

 
   9 bytes in section .bss
 300 bytes in section .rodata
 980 bytes in section .text
 
 980 bytes of CODE  memory
 300 bytes of CONST memory
   9 bytes of DATA  memory

Errors: none
Warnings: none
