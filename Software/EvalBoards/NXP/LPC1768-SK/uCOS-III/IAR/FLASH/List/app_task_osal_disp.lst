###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       25/May/2017  15:27:10
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\APP\Tasks\app_task_osal_disp.c
#    Command line =  
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\APP\Tasks\app_task_osal_disp.c
#        -lCN
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pa050 -o
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Normal.h" -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Source\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Cfg\Template\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-MB\Os\uCOS-III\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\OS\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\OSAL\Ports\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\User\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Iap\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Protocol\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\Tasks\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\APP\AES\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\OS\OSAL\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\CSB\include\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\BSP\Driver\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\MX25L1602Drv\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\APP\OCM800600T80\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\User\BSP\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\CardOperations\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\DataDeal\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Driver\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\EquipmentOperations\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\Global\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\MastConTask\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SlaveConTask\
#        -I
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\..\Application\Library\SpeedTest\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\app_task_osal_disp.lst
#    Object file  =  
#        F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\app_task_osal_disp.o
#
###############################################################################

F:\iar\Micrium_LPC1768-SK_uCOS-III\Software\APP\Tasks\app_task_osal_disp.c
      1          /*******************************************************************************
      2           *   Filename:       app_task_disp.c
      3           *   Revised:        All copyrights reserved to wumingshen.
      4           *   Revision:       v1.0
      5           *   Writer:	     wumingshen.
      6           *
      7           *   Description:    双击选中 disp 按 Ctrl + H, 钩选 Match the case, Replace with
      8           *                   输入您要的名字，点击 Replace All
      9           *                   双击选中 Disp 按 Ctrl + H, 钩选 Match the case, Replace with
     10           *                   输入您要的名字，点击 Replace All
     11           *                   双击选中 DISP 按 Ctrl + H, 钩选 Match the case, Replace with
     12           *                   输入您要的名字，点击 Replace All
     13           *                   在 app_cfg.h 中指定本任务的 优先级  （ APP_TASK_DISP_PRIO ）
     14           *                                            和 任务堆栈（ APP_TASK_DISP_STK_SIZE ）大小
     15           *                   在 app.h 中声明本任务的     创建函数（ void  App_TaskDispCreate(void) ）
     16           *                                            和 看门狗标志位 （ WDTFLAG_Disp ）
     17           *
     18           *   Notes:
     19           *     				E-mail: shenchangwei945@163.com
     20           *
     21           *******************************************************************************/
     22          
     23          /*******************************************************************************
     24           * INCLUDES
     25           */
     26          #define  SNL_APP_SOURCE
     27          #include <includes.h>
     28          #include <global.h>
     29          #include <app_ctrl.h>
     30          #include <bsp_max7219.h>
     31          //#include <iap.h>
     32          
     33          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     34          const  CPU_CHAR  *app_task_disp__c = "$Id: $";
     35          #endif
     36          
     37          #define APP_TASK_DISP_EN     DEF_ENABLED
     38          #if APP_TASK_DISP_EN == DEF_ENABLED
     39          /*******************************************************************************
     40           * CONSTANTS
     41           */
     42          #define CYCLE_TIME_TICKS     (OS_CFG_TICK_RATE_HZ * 2u)
     43          
     44          /*******************************************************************************
     45           * MACROS
     46           */
     47          
     48          /*******************************************************************************
     49           * TYPEDEFS
     50           */
     51          
     52          /*******************************************************************************
     53           * LOCAL VARIABLES
     54           */
     55          
     56          #if ( OSAL_EN == DEF_ENABLED )
     57          #else
     58          /***********************************************
     59          * 描述： 任务控制块（TCB）
     60          */
     61          static  OS_TCB   AppTaskDispTCB;
     62          
     63          /***********************************************
     64          * 描述： 任务堆栈（STACKS）
     65          */
     66          //static  CPU_STK  AppTaskDispStk[ APP_TASK_DISP_STK_SIZE ];
     67          
     68          #endif
     69          /*******************************************************************************
     70           * GLOBAL VARIABLES
     71           */
     72          
     73          /*******************************************************************************
     74           * LOCAL FUNCTIONS
     75           */
     76          void    comm_mtr_err_judye(void);
     77          
     78               
     79          #if ( OSAL_EN == DEF_ENABLED )
     80          #else
     81          static  void    AppTaskDisp           (void *p_arg);
     82          #endif
     83          
     84          /*******************************************************************************
     85           * GLOBAL FUNCTIONS
     86           */
     87          uint8 JudgeFlashIDErrFlg(void) ;  
     88          
     89          /*******************************************************************************
     90           * EXTERN VARIABLES
     91           */
     92          extern  stcSysCtrl  sCtrl;
     93          
     94          
     95          /*******************************************************************************/
     96          
     97          /*******************************************************************************
     98           * 名    称： AppTaskDisp
     99           * 功    能： 控制任务
    100           * 入口参数： p_arg - 由任务创建函数传入
    101           * 出口参数： 无
    102           * 作　 　者： wumingshen.
    103           * 创建日期： 2015-02-05
    104           * 修    改：
    105           * 修改日期：
    106           *******************************************************************************/
    107          extern  MODBUS_CH   *g_pch; 
    108          
    109          //#if ( OSAL_EN == DEF_ENABLED )

   \                                 In section .text, align 2, keep-with-next
    110          osalEvt  TaskDispEvtProcess(INT8U task_id, osalEvt task_event)
    111          //#else
    112          //static  void  AppTaskDisp (void *p_arg)
    113          //#endif
    114          {
   \                     TaskDispEvtProcess: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
    115          //    OS_ERR      err;
    116          //    INT32U      ticks;
    117          //    INT32S      dly;
    118          //    CPU_SR_ALLOC();
    119          //    
    120          //    /***********************************************
    121          //    * 描述：Task body, always written as an infinite loop.
    122          //    */
    123          //#if ( OSAL_EN == DEF_ENABLED )
    124          //#else
    125          //    TaskInitDisp();
    126          //    
    127          //    while (DEF_TRUE) {
    128          //#endif
    129          //        /***********************************************
    130          //        * 描述： 本任务看门狗标志置位
    131          //        */
    132          //        OS_FlagPost ((OS_FLAG_GRP *)&WdtFlagGRP,
    133          //                     (OS_FLAGS     ) WDT_FLAG_DISP,
    134          //                     (OS_OPT       ) OS_OPT_POST_FLAG_SET,
    135          //                     (CPU_TS       ) 0,
    136          //                     (OS_ERR      *) &err);
    137          //        /***********************************************
    138          //        * 描述： 得到系统当前时间
    139          //        */
    140          //        ticks = OSTimeGet(&err);
    141          //        
    142          //#if ( OSAL_EN == DEF_ENABLED )
    143          
    144                  if( task_event & OS_EVT_DISP_TICKS ) {
   \   00000008   0x07F0             LSLS     R0,R6,#+31
   \   0000000A   0xF140 0x810C      BPL.W    ??TaskDispEvtProcess_0
    145          //#else
    146          //#endif
    147                      static  uint8   mode    = 0;
    148                      static  uint8   times   = 0;
    149                      static  uint8   disflg  = 0;
    150                      uint8            delay  = 4;      //油量显示最大时间间隔
   \   0000000E   0x2704             MOVS     R7,#+4
    151          
    152                      stcTime         sTime;
    153          
    154                      /***********************************************
    155                      * 描述： 根据显示模式显示
    156                      */
    157                      switch(mode/2) {
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2102             MOVS     R1,#+2
   \   00000018   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD015             BEQ.N    ??TaskDispEvtProcess_1
   \   00000020   0x2802             CMP      R0,#+2
   \   00000022   0xD03C             BEQ.N    ??TaskDispEvtProcess_2
   \   00000024   0xD327             BCC.N    ??TaskDispEvtProcess_3
   \   00000026   0x2804             CMP      R0,#+4
   \   00000028   0xD04D             BEQ.N    ??TaskDispEvtProcess_4
   \   0000002A   0xD343             BCC.N    ??TaskDispEvtProcess_5
   \   0000002C   0x2806             CMP      R0,#+6
   \   0000002E   0xD062             BEQ.N    ??TaskDispEvtProcess_6
   \   00000030   0xD355             BCC.N    ??TaskDispEvtProcess_7
   \   00000032   0x2808             CMP      R0,#+8
   \   00000034   0xD078             BEQ.N    ??TaskDispEvtProcess_8
   \   00000036   0xD36A             BCC.N    ??TaskDispEvtProcess_9
   \   00000038   0x280A             CMP      R0,#+10
   \   0000003A   0xF000 0x808D      BEQ.W    ??TaskDispEvtProcess_10
   \   0000003E   0xD37C             BCC.N    ??TaskDispEvtProcess_11
   \   00000040   0x280C             CMP      R0,#+12
   \   00000042   0xF000 0x80A1      BEQ.W    ??TaskDispEvtProcess_12
   \   00000046   0xF0C0 0x8093      BCC.W    ??TaskDispEvtProcess_13
   \   0000004A   0xE0B2             B.N      ??TaskDispEvtProcess_14
    158                      /*******************************************************************
    159                      * 描述： 显示装置时间
    160                      */
    161                      case 0: 
    162                              mode++;
   \                     ??TaskDispEvtProcess_1: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x1C40             ADDS     R0,R0,#+1
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000058   0x7008             STRB     R0,[R1, #+0]
    163                              ReadTime((stcTime * )& sTime);
   \   0000005A   0x4668             MOV      R0,SP
   \   0000005C   0x.... 0x....      BL       ReadTime
    164                              uprintf("%02d-%02d-%02d",sTime.Year
    165                                                      ,sTime.Month
    166                                                      ,sTime.Date
    167                                      );     
   \   00000060   0xF89D 0x3003      LDRB     R3,[SP, #+3]
   \   00000064   0xF89D 0x2004      LDRB     R2,[SP, #+4]
   \   00000068   0xF89D 0x1005      LDRB     R1,[SP, #+5]
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   00000070   0x.... 0x....      BL       uprintf
    168                              break;
   \   00000074   0xE0CA             B.N      ??TaskDispEvtProcess_15
    169                      case 1: 
    170                              mode++;
   \                     ??TaskDispEvtProcess_3: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x1C40             ADDS     R0,R0,#+1
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000082   0x7008             STRB     R0,[R1, #+0]
    171                              ReadTime((stcTime * )& sTime);     
   \   00000084   0x4668             MOV      R0,SP
   \   00000086   0x.... 0x....      BL       ReadTime
    172                              uprintf("%02d-%02d-%02d",sTime.Hour
    173                                                      ,sTime.Min
    174                                                      ,sTime.Sec
    175                                      );    
   \   0000008A   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   0000008E   0xF89D 0x2001      LDRB     R2,[SP, #+1]
   \   00000092   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   00000096   0x....             LDR.N    R0,??DataTable2_2
   \   00000098   0x.... 0x....      BL       uprintf
    176                              break;
   \   0000009C   0xE0B6             B.N      ??TaskDispEvtProcess_15
    177          
    178                      /*******************************************************************
    179                      * 描述： 显示软件版本
    180                      *        时间：开机显示一次，显示2s；
    181                      */
    182                      case 2: 
    183                          mode++;
   \                     ??TaskDispEvtProcess_2: (+1)
   \   0000009E   0x....             LDR.N    R0,??DataTable2_1
   \   000000A0   0x7800             LDRB     R0,[R0, #+0]
   \   000000A2   0x1C40             ADDS     R0,R0,#+1
   \   000000A4   0x....             LDR.N    R1,??DataTable2_1
   \   000000A6   0x7008             STRB     R0,[R1, #+0]
    184                          uprintf("SV_%4d",sCtrl.SoftWareID);
   \   000000A8   0x....             LDR.N    R0,??DataTable2_3
   \   000000AA   0x8841             LDRH     R1,[R0, #+2]
   \   000000AC   0x....             LDR.N    R0,??DataTable2_4
   \   000000AE   0x.... 0x....      BL       uprintf
    185                          
    186                          break;
   \   000000B2   0xE0AB             B.N      ??TaskDispEvtProcess_15
    187                      /*******************************************************************
    188                      * 描述： 显示硬件版本
    189                      *        第三版硬件    
    190                      */
    191                      case 3: 
    192                          mode++;
   \                     ??TaskDispEvtProcess_5: (+1)
   \   000000B4   0x....             LDR.N    R0,??DataTable2_1
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x1C40             ADDS     R0,R0,#+1
   \   000000BA   0x....             LDR.N    R1,??DataTable2_1
   \   000000BC   0x7008             STRB     R0,[R1, #+0]
    193                          uprintf("SV31");
   \   000000BE   0x....             LDR.N    R0,??DataTable2_5
   \   000000C0   0x.... 0x....      BL       uprintf
    194                          
    195                          break;
   \   000000C4   0xE0A2             B.N      ??TaskDispEvtProcess_15
    196                      /*******************************************************************
    197                      * 描述： 显示油箱模型编号
    198                      */
    199                      case 4: 
    200                          mode++;
   \                     ??TaskDispEvtProcess_4: (+1)
   \   000000C6   0x....             LDR.N    R0,??DataTable2_1
   \   000000C8   0x7800             LDRB     R0,[R0, #+0]
   \   000000CA   0x1C40             ADDS     R0,R0,#+1
   \   000000CC   0x....             LDR.N    R1,??DataTable2_1
   \   000000CE   0x7008             STRB     R0,[R1, #+0]
    201                          
    202                          uprintf("C_%d",sCtrl.SOilPara.ModelNum);                
   \   000000D0   0x....             LDR.N    R0,??DataTable2_3
   \   000000D2   0xF890 0x10A0      LDRB     R1,[R0, #+160]
   \   000000D6   0x....             LDR.N    R0,??DataTable2_6
   \   000000D8   0x.... 0x....      BL       uprintf
    203                          break;
   \   000000DC   0xE096             B.N      ??TaskDispEvtProcess_15
    204                      /*******************************************************************
    205                      * 描述： 高度
    206                      */
    207                      case 5:  
    208                          mode++;
   \                     ??TaskDispEvtProcess_7: (+1)
   \   000000DE   0x....             LDR.N    R0,??DataTable2_1
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x1C40             ADDS     R0,R0,#+1
   \   000000E4   0x....             LDR.N    R1,??DataTable2_1
   \   000000E6   0x7008             STRB     R0,[R1, #+0]
    209                          uprintf("H_%d",sCtrl.SOilPara.Hig);                
   \   000000E8   0x....             LDR.N    R0,??DataTable2_3
   \   000000EA   0xF9B0 0x10A2      LDRSH    R1,[R0, #+162]
   \   000000EE   0x....             LDR.N    R0,??DataTable2_7
   \   000000F0   0x.... 0x....      BL       uprintf
    210                          break;  
   \   000000F4   0xE08A             B.N      ??TaskDispEvtProcess_15
    211                      /*******************************************************************
    212                      * 描述： 线性
    213                      */
    214                      case 6:  
    215                          mode++;
   \                     ??TaskDispEvtProcess_6: (+1)
   \   000000F6   0x....             LDR.N    R0,??DataTable2_1
   \   000000F8   0x7800             LDRB     R0,[R0, #+0]
   \   000000FA   0x1C40             ADDS     R0,R0,#+1
   \   000000FC   0x....             LDR.N    R1,??DataTable2_1
   \   000000FE   0x7008             STRB     R0,[R1, #+0]
    216                          uprintf("L_%d",sCtrl.SOilPara.Hig);                
   \   00000100   0x....             LDR.N    R0,??DataTable2_3
   \   00000102   0xF9B0 0x10A2      LDRSH    R1,[R0, #+162]
   \   00000106   0x....             LDR.N    R0,??DataTable2_8
   \   00000108   0x.... 0x....      BL       uprintf
    217                          break; 
   \   0000010C   0xE07E             B.N      ??TaskDispEvtProcess_15
    218                      /*******************************************************************
    219                      * 描述： 车型车号
    220                      */
    221                      case 7:  
    222                          mode++;
   \                     ??TaskDispEvtProcess_9: (+1)
   \   0000010E   0x....             LDR.N    R0,??DataTable2_1
   \   00000110   0x7800             LDRB     R0,[R0, #+0]
   \   00000112   0x1C40             ADDS     R0,R0,#+1
   \   00000114   0x....             LDR.N    R1,??DataTable2_1
   \   00000116   0x7008             STRB     R0,[R1, #+0]
    223                          uprintf("%4d.%4d",   sCtrl.sProductInfo.sLocoId.Type,
    224                                              sCtrl.sProductInfo.sLocoId.Num);                
   \   00000118   0x....             LDR.N    R0,??DataTable2_3
   \   0000011A   0x8BC2             LDRH     R2,[R0, #+30]
   \   0000011C   0x....             LDR.N    R0,??DataTable2_3
   \   0000011E   0x8B81             LDRH     R1,[R0, #+28]
   \   00000120   0x....             LDR.N    R0,??DataTable2_9
   \   00000122   0x.... 0x....      BL       uprintf
    225                          break; 
   \   00000126   0xE071             B.N      ??TaskDispEvtProcess_15
    226                      /*******************************************************************
    227                      * 描述： 全灭
    228                      */
    229                      case 8:  
    230                          mode++;
   \                     ??TaskDispEvtProcess_8: (+1)
   \   00000128   0x....             LDR.N    R0,??DataTable2_1
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x1C40             ADDS     R0,R0,#+1
   \   0000012E   0x....             LDR.N    R1,??DataTable2_1
   \   00000130   0x7008             STRB     R0,[R1, #+0]
    231          //                mode++;
    232                          uprintf("      ");                
   \   00000132   0x....             LDR.N    R0,??DataTable2_10
   \   00000134   0x.... 0x....      BL       uprintf
    233                          break;   
   \   00000138   0xE068             B.N      ??TaskDispEvtProcess_15
    234                      /*******************************************************************
    235                      * 描述： 高度值
    236                      */
    237                      case 9:  
    238                          mode++;
   \                     ??TaskDispEvtProcess_11: (+1)
   \   0000013A   0x....             LDR.N    R0,??DataTable2_1
   \   0000013C   0x7800             LDRB     R0,[R0, #+0]
   \   0000013E   0x1C40             ADDS     R0,R0,#+1
   \   00000140   0x....             LDR.N    R1,??DataTable2_1
   \   00000142   0x7008             STRB     R0,[R1, #+0]
    239                          uprintf("%4d.%4d",sCtrl.sRec.Myhig1,sCtrl.sRec.Myhig2);                
   \   00000144   0x....             LDR.N    R0,??DataTable2_3
   \   00000146   0xF9B0 0x2066      LDRSH    R2,[R0, #+102]
   \   0000014A   0x....             LDR.N    R0,??DataTable2_3
   \   0000014C   0xF9B0 0x1064      LDRSH    R1,[R0, #+100]
   \   00000150   0x....             LDR.N    R0,??DataTable2_9
   \   00000152   0x.... 0x....      BL       uprintf
    240                          break;  
   \   00000156   0xE059             B.N      ??TaskDispEvtProcess_15
    241                      /*******************************************************************
    242                      * 描述： 速度1
    243                      */
    244                      case 10:  
    245                          mode++;
   \                     ??TaskDispEvtProcess_10: (+1)
   \   00000158   0x....             LDR.N    R0,??DataTable2_1
   \   0000015A   0x7800             LDRB     R0,[R0, #+0]
   \   0000015C   0x1C40             ADDS     R0,R0,#+1
   \   0000015E   0x....             LDR.N    R1,??DataTable2_1
   \   00000160   0x7008             STRB     R0,[R1, #+0]
    246                          uprintf("S1_%d",sCtrl.sRec.Myspeed1);                
   \   00000162   0x....             LDR.N    R0,??DataTable2_3
   \   00000164   0xF8B0 0x1050      LDRH     R1,[R0, #+80]
   \   00000168   0x....             LDR.N    R0,??DataTable2_11
   \   0000016A   0x.... 0x....      BL       uprintf
    247                          break;   
   \   0000016E   0xE04D             B.N      ??TaskDispEvtProcess_15
    248                          
    249                      /*******************************************************************
    250                      * 描述： 速度1
    251                      */
    252                      case 11:  
    253                          mode++;
   \                     ??TaskDispEvtProcess_13: (+1)
   \   00000170   0x....             LDR.N    R0,??DataTable2_1
   \   00000172   0x7800             LDRB     R0,[R0, #+0]
   \   00000174   0x1C40             ADDS     R0,R0,#+1
   \   00000176   0x....             LDR.N    R1,??DataTable2_1
   \   00000178   0x7008             STRB     R0,[R1, #+0]
    254                          uprintf("CS_%d",sCtrl.sRec.Myspeed1);                
   \   0000017A   0x....             LDR.N    R0,??DataTable2_3
   \   0000017C   0xF8B0 0x1050      LDRH     R1,[R0, #+80]
   \   00000180   0x....             LDR.N    R0,??DataTable2_12
   \   00000182   0x.... 0x....      BL       uprintf
    255                          break;   
   \   00000186   0xE041             B.N      ??TaskDispEvtProcess_15
    256                      /*******************************************************************
    257                      * 描述： 故障判断。---铁电，flash。如果异常。显示异常代码。
    258                      */
    259                      case 12:  
    260                          mode++;
   \                     ??TaskDispEvtProcess_12: (+1)
   \   00000188   0x....             LDR.N    R0,??DataTable2_1
   \   0000018A   0x7800             LDRB     R0,[R0, #+0]
   \   0000018C   0x1C40             ADDS     R0,R0,#+1
   \   0000018E   0x....             LDR.N    R1,??DataTable2_1
   \   00000190   0x7008             STRB     R0,[R1, #+0]
    261                          //uprintf("CS_%d",sCtrl.sRec.Myspeed1);   
    262                          uint8   ErrFlg;
    263                          //FLASH故障判断。
    264                          ErrFlg  = JudgeFlashIDErrFlg();  
   \   00000192   0x.... 0x....      BL       JudgeFlashIDErrFlg
   \   00000196   0x0004             MOVS     R4,R0
    265                          if(ErrFlg != 0xff)
   \   00000198   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000019A   0x2CFF             CMP      R4,#+255
   \   0000019C   0xD005             BEQ.N    ??TaskDispEvtProcess_16
    266                              uprintf("E-%d",ErrFlg); 
   \   0000019E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001A0   0x0021             MOVS     R1,R4
   \   000001A2   0x....             LDR.N    R0,??DataTable2_13
   \   000001A4   0x.... 0x....      BL       uprintf
   \   000001A8   0xE002             B.N      ??TaskDispEvtProcess_17
    267                          else
    268                              uprintf("88888888"); 
   \                     ??TaskDispEvtProcess_16: (+1)
   \   000001AA   0x....             LDR.N    R0,??DataTable2_14
   \   000001AC   0x.... 0x....      BL       uprintf
    269          
    270                          //铁电故障判断。参数读取错误，装置异常。
    271                          break;   
   \                     ??TaskDispEvtProcess_17: (+1)
   \   000001B0   0xE02C             B.N      ??TaskDispEvtProcess_15
    272                          
    273                      /*******************************************************************
    274                      * 描述： 开机后，显示油量，通讯故障判断及故障代码
    275                      */
    276                      default:
    277                          times++;
   \                     ??TaskDispEvtProcess_14: (+1)
   \   000001B2   0x....             LDR.N    R0,??DataTable2_15
   \   000001B4   0x7800             LDRB     R0,[R0, #+0]
   \   000001B6   0x1C40             ADDS     R0,R0,#+1
   \   000001B8   0x....             LDR.N    R1,??DataTable2_15
   \   000001BA   0x7008             STRB     R0,[R1, #+0]
    278                          if(disflg == 0 || (times % delay == 0))  //如果无内容显示，显示油量值
   \   000001BC   0x....             LDR.N    R0,??DataTable2_16
   \   000001BE   0x7800             LDRB     R0,[R0, #+0]
   \   000001C0   0x2800             CMP      R0,#+0
   \   000001C2   0xD008             BEQ.N    ??TaskDispEvtProcess_18
   \   000001C4   0x....             LDR.N    R0,??DataTable2_15
   \   000001C6   0x7800             LDRB     R0,[R0, #+0]
   \   000001C8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001CA   0xFB90 0xF1F7      SDIV     R1,R0,R7
   \   000001CE   0xFB07 0x0011      MLS      R0,R7,R1,R0
   \   000001D2   0x2800             CMP      R0,#+0
   \   000001D4   0xD118             BNE.N    ??TaskDispEvtProcess_19
    279                          {
    280                              uprintf("%8d",sCtrl.sRec.MstDip);   //显示油量
   \                     ??TaskDispEvtProcess_18: (+1)
   \   000001D6   0x....             LDR.N    R0,??DataTable2_3
   \   000001D8   0x6D41             LDR      R1,[R0, #+84]
   \   000001DA   0x....             ADR.N    R0,??DataTable2  ;; "%8d"
   \   000001DC   0x.... 0x....      BL       uprintf
    281                              
    282                              if( sCtrl.sRunPara.SysSta && times % delay == 0)
   \   000001E0   0x....             LDR.N    R0,??DataTable2_3
   \   000001E2   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000001E6   0x2800             CMP      R0,#+0
   \   000001E8   0xD00E             BEQ.N    ??TaskDispEvtProcess_19
   \   000001EA   0x....             LDR.N    R0,??DataTable2_15
   \   000001EC   0x7800             LDRB     R0,[R0, #+0]
   \   000001EE   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001F0   0xFB90 0xF1F7      SDIV     R1,R0,R7
   \   000001F4   0xFB07 0x0011      MLS      R0,R7,R1,R0
   \   000001F8   0x2800             CMP      R0,#+0
   \   000001FA   0xD105             BNE.N    ??TaskDispEvtProcess_19
    283                                  uprintf("E-%d",sCtrl.sRunPara.SysSta);   //显示故障代码
   \   000001FC   0x....             LDR.N    R0,??DataTable2_3
   \   000001FE   0xF890 0x10B0      LDRB     R1,[R0, #+176]
   \   00000202   0x....             LDR.N    R0,??DataTable2_13
   \   00000204   0x.... 0x....      BL       uprintf
    284                          }
    285                          
    286                          comm_mtr_err_judye();           //油尺通讯故障判断
   \                     ??TaskDispEvtProcess_19: (+1)
   \   00000208   0x.... 0x....      BL       comm_mtr_err_judye
    287                          break;
    288                      }
    289                      
    290                      disflg = BSP_DispEvtProcess();  //执行显示操作，有内容显示，不赋值。否者油量赋值
   \                     ??TaskDispEvtProcess_15: (+1)
   \   0000020C   0x.... 0x....      BL       BSP_DispEvtProcess
   \   00000210   0x....             LDR.N    R1,??DataTable2_16
   \   00000212   0x7008             STRB     R0,[R1, #+0]
    291                      
    292                      osal_start_timerEx( OS_TASK_ID_DISP,
    293                                          OS_EVT_DISP_TICKS,
    294                                          500);
   \   00000214   0xF44F 0x72FA      MOV      R2,#+500
   \   00000218   0x2101             MOVS     R1,#+1
   \   0000021A   0x2000             MOVS     R0,#+0
   \   0000021C   0x.... 0x....      BL       osal_start_timerEx
    295                      return ( task_event ^ OS_EVT_DISP_TICKS );
   \   00000220   0xF096 0x0001      EORS     R0,R6,#0x1
   \   00000224   0xE000             B.N      ??TaskDispEvtProcess_20
    296                  }
    297              return  task_event;
   \                     ??TaskDispEvtProcess_0: (+1)
   \   00000226   0x0030             MOVS     R0,R6
   \                     ??TaskDispEvtProcess_20: (+1)
   \   00000228   0xBDFE             POP      {R1-R7,PC}       ;; return
    298          }

   \                                 In section .bss, align 1
   \                     ??mode:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??times:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??disflg:
   \   00000000                      DS8 1
    299          
    300          
    301          /*******************************************************************************
    302           * 名    称： APP_DispInit
    303           * 功    能： 任务初始化
    304           * 入口参数： 无
    305           * 出口参数： 无
    306           * 作　 　者： wumingshen.
    307           * 创建日期： 2015-12-08
    308           * 修    改：
    309           * 修改日期：
    310           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    311          void TaskInitDisp(void)
    312          {    
   \                     TaskInitDisp: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    313          //    /***********************************************
    314          //    * 描述： 初始化本任务用到的相关硬件
    315          //    */
    316              BSP_DispInit();
   \   00000002   0x.... 0x....      BL       BSP_DispInit
    317          
    318              BSP_DispOff();
   \   00000006   0x.... 0x....      BL       BSP_DispOff
    319              
    320              BSP_DispSetBrightness(10);
   \   0000000A   0x200A             MOVS     R0,#+10
   \   0000000C   0x.... 0x....      BL       BSP_DispSetBrightness
    321              BSP_DispClrAll();
   \   00000010   0x.... 0x....      BL       BSP_DispClrAll
    322              uprintf("88888888");
   \   00000014   0x....             LDR.N    R0,??DataTable2_14
   \   00000016   0x.... 0x....      BL       uprintf
    323              BSP_DispEvtProcess();
   \   0000001A   0x.... 0x....      BL       BSP_DispEvtProcess
    324              
    325          
    326              /***********************************************
    327              * 描述： 在看门狗标志组注册本任务的看门狗标志
    328              */
    329              WdtFlags |= WDT_FLAG_DISP;
   \   0000001E   0x....             LDR.N    R0,??DataTable2_17
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000026   0x....             LDR.N    R1,??DataTable2_17
   \   00000028   0x6008             STR      R0,[R1, #+0]
    330              /*************************************************
    331              * 描述：启动事件查询
    332              */
    333              osal_start_timerEx( OS_TASK_ID_DISP,
    334                                  OS_EVT_DISP_TICKS,
    335                                  100);
   \   0000002A   0x2264             MOVS     R2,#+100
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       osal_start_timerEx
    336          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
    337          

   \                                 In section .text, align 2, keep-with-next
    338          void    comm_mtr_err_judye(void)
    339          {
   \                     comm_mtr_err_judye: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    340              /*******************************************************************
    341              * 描述：油尺串口通讯故障判断
    342              */
    343              static  uint32  comm_mtr_err_times = 0;
    344              
    345              if(         sCtrl.Mtr.ConnCtrl[0].ErrFlg == 1 
    346                 &&       sCtrl.Mtr.ConnCtrl[1].ErrFlg == 1){
   \   00000002   0x....             LDR.N    R0,??DataTable2_3
   \   00000004   0xF890 0x0397      LDRB     R0,[R0, #+919]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD11D             BNE.N    ??comm_mtr_err_judye_0
   \   0000000C   0x....             LDR.N    R0,??DataTable2_3
   \   0000000E   0xF890 0x039F      LDRB     R0,[R0, #+927]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD118             BNE.N    ??comm_mtr_err_judye_0
    347          
    348                  comm_mtr_err_times++;                   //错误次数
   \   00000016   0x....             LDR.N    R0,??DataTable2_18
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable2_18
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    349                  
    350                  if(comm_mtr_err_times > 4 && sCtrl.sRunPara.SysSta == 0 ){
   \   00000020   0x....             LDR.N    R0,??DataTable2_18
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2805             CMP      R0,#+5
   \   00000026   0xD370             BCC.N    ??comm_mtr_err_judye_1
   \   00000028   0x....             LDR.N    R0,??DataTable2_3
   \   0000002A   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD16B             BNE.N    ??comm_mtr_err_judye_1
    351                      sCtrl.sRunPara.SysSta   = 83;       //测量装置1、测量装置2均有故障
   \   00000032   0x2053             MOVS     R0,#+83
   \   00000034   0x....             LDR.N    R1,??DataTable2_3
   \   00000036   0xF881 0x00B0      STRB     R0,[R1, #+176]
    352                      
    353                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta;    //错误代码赋值
   \   0000003A   0x....             LDR.N    R0,??DataTable2_3
   \   0000003C   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   00000040   0x....             LDR.N    R1,??DataTable2_3
   \   00000042   0xF881 0x0098      STRB     R0,[R1, #+152]
   \   00000046   0xE060             B.N      ??comm_mtr_err_judye_1
    354                  }
    355              }else if(   sCtrl.Mtr.ConnCtrl[0].ErrFlg == 1){
   \                     ??comm_mtr_err_judye_0: (+1)
   \   00000048   0x....             LDR.N    R0,??DataTable2_3
   \   0000004A   0xF890 0x0397      LDRB     R0,[R0, #+919]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD118             BNE.N    ??comm_mtr_err_judye_2
    356                  comm_mtr_err_times++;                   //错误次数
   \   00000052   0x....             LDR.N    R0,??DataTable2_18
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable2_18
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    357                  
    358                  if(comm_mtr_err_times > 8 && sCtrl.sRunPara.SysSta == 0 ){
   \   0000005C   0x....             LDR.N    R0,??DataTable2_18
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x2809             CMP      R0,#+9
   \   00000062   0xD352             BCC.N    ??comm_mtr_err_judye_1
   \   00000064   0x....             LDR.N    R0,??DataTable2_3
   \   00000066   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD14D             BNE.N    ??comm_mtr_err_judye_1
    359                      sCtrl.sRunPara.SysSta   = 71;       //测量装置1故障
   \   0000006E   0x2047             MOVS     R0,#+71
   \   00000070   0x....             LDR.N    R1,??DataTable2_3
   \   00000072   0xF881 0x00B0      STRB     R0,[R1, #+176]
    360                      
    361                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta;    //错误代码赋值
   \   00000076   0x....             LDR.N    R0,??DataTable2_3
   \   00000078   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   0000007C   0x....             LDR.N    R1,??DataTable2_3
   \   0000007E   0xF881 0x0098      STRB     R0,[R1, #+152]
   \   00000082   0xE042             B.N      ??comm_mtr_err_judye_1
    362                  }
    363                  
    364              }else if(   sCtrl.Mtr.ConnCtrl[1].ErrFlg == 1){
   \                     ??comm_mtr_err_judye_2: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable2_3
   \   00000086   0xF890 0x039F      LDRB     R0,[R0, #+927]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD118             BNE.N    ??comm_mtr_err_judye_3
    365                  comm_mtr_err_times++;                   //错误次数
   \   0000008E   0x....             LDR.N    R0,??DataTable2_18
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x1C40             ADDS     R0,R0,#+1
   \   00000094   0x....             LDR.N    R1,??DataTable2_18
   \   00000096   0x6008             STR      R0,[R1, #+0]
    366                  
    367                  if(comm_mtr_err_times > 8 && sCtrl.sRunPara.SysSta == 0 )
   \   00000098   0x....             LDR.N    R0,??DataTable2_18
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x2809             CMP      R0,#+9
   \   0000009E   0xD308             BCC.N    ??comm_mtr_err_judye_4
   \   000000A0   0x....             LDR.N    R0,??DataTable2_3
   \   000000A2   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD103             BNE.N    ??comm_mtr_err_judye_4
    368                      sCtrl.sRunPara.SysSta   = 81;       //测量装置2故障
   \   000000AA   0x2051             MOVS     R0,#+81
   \   000000AC   0x....             LDR.N    R1,??DataTable2_3
   \   000000AE   0xF881 0x00B0      STRB     R0,[R1, #+176]
    369                  
    370                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta;    //错误代码赋值
   \                     ??comm_mtr_err_judye_4: (+1)
   \   000000B2   0x....             LDR.N    R0,??DataTable2_3
   \   000000B4   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000B8   0x....             LDR.N    R1,??DataTable2_3
   \   000000BA   0xF881 0x0098      STRB     R0,[R1, #+152]
   \   000000BE   0xE024             B.N      ??comm_mtr_err_judye_1
    371              }else {
    372                  comm_mtr_err_times = 0;                 //错误次数
   \                     ??comm_mtr_err_judye_3: (+1)
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x....             LDR.N    R1,??DataTable2_18
   \   000000C4   0x6008             STR      R0,[R1, #+0]
    373          
    374                  if(     sCtrl.sRunPara.SysSta == 81
    375                      ||  sCtrl.sRunPara.SysSta == 71
    376                      ||  sCtrl.sRunPara.SysSta == 83){
   \   000000C6   0x....             LDR.N    R0,??DataTable2_3
   \   000000C8   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000CC   0x2851             CMP      R0,#+81
   \   000000CE   0xD009             BEQ.N    ??comm_mtr_err_judye_5
   \   000000D0   0x....             LDR.N    R0,??DataTable2_3
   \   000000D2   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000D6   0x2847             CMP      R0,#+71
   \   000000D8   0xD004             BEQ.N    ??comm_mtr_err_judye_5
   \   000000DA   0x....             LDR.N    R0,??DataTable2_3
   \   000000DC   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000E0   0x2853             CMP      R0,#+83
   \   000000E2   0xD112             BNE.N    ??comm_mtr_err_judye_1
    377                      uprintf("E-%d",sCtrl.sRunPara.SysSta+100);  //显示故障代码+100
   \                     ??comm_mtr_err_judye_5: (+1)
   \   000000E4   0x....             LDR.N    R0,??DataTable2_3
   \   000000E6   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000EA   0xF110 0x0164      ADDS     R1,R0,#+100
   \   000000EE   0x....             LDR.N    R0,??DataTable2_13
   \   000000F0   0x.... 0x....      BL       uprintf
    378                      
    379                      sCtrl.sRec.ErrorCode    = sCtrl.sRunPara.SysSta+100;//错误代码赋值
   \   000000F4   0x....             LDR.N    R0,??DataTable2_3
   \   000000F6   0xF890 0x00B0      LDRB     R0,[R0, #+176]
   \   000000FA   0x3064             ADDS     R0,R0,#+100
   \   000000FC   0x....             LDR.N    R1,??DataTable2_3
   \   000000FE   0xF881 0x0098      STRB     R0,[R1, #+152]
    380                      sCtrl.sRunPara.SysSta   = 0;        //清除故障代码
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x....             LDR.N    R1,??DataTable2_3
   \   00000106   0xF881 0x00B0      STRB     R0,[R1, #+176]
    381                  }
    382              }
    383          }
   \                     ??comm_mtr_err_judye_1: (+1)
   \   0000010A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??comm_mtr_err_times:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x25 0x38          DC8      "%8d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ??mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     sCtrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     ??times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     ??disflg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     WdtFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     ??comm_mtr_err_times

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x25 0x30          DC8 "%02d-%02d-%02d"
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x56          DC8 "SV_%4d"
   \              0x5F 0x25    
   \              0x34 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x53 0x56          DC8 "SV31"
   \              0x33 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x43 0x5F          DC8 "C_%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x48 0x5F          DC8 "H_%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x4C 0x5F          DC8 "L_%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x25 0x34          DC8 "%4d.%4d"
   \              0x64 0x2E    
   \              0x25 0x34    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x20 0x20          DC8 "      "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x53 0x31          DC8 "S1_%d"
   \              0x5F 0x25    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x43 0x53          DC8 "CS_%d"
   \              0x5F 0x25    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x45 0x2D          DC8 "E-%d"
   \              0x25 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x38 0x38          DC8 "88888888"
   \              0x38 0x38    
   \              0x38 0x38    
   \              0x38 0x38    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x38          DC8 "%8d"
   \              0x64 0x00    
    384          /*******************************************************************************
    385           * 				                    end of file                                *
    386           *******************************************************************************/
    387          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   TaskDispEvtProcess
        32   -> BSP_DispEvtProcess
        32   -> JudgeFlashIDErrFlg
        32   -> ReadTime
        32   -> comm_mtr_err_judye
        32   -> osal_start_timerEx
        32   -> uprintf
       8   TaskInitDisp
         8   -> BSP_DispClrAll
         8   -> BSP_DispEvtProcess
         8   -> BSP_DispInit
         8   -> BSP_DispOff
         8   -> BSP_DispSetBrightness
         8   -> osal_start_timerEx
         8   -> uprintf
       8   comm_mtr_err_judye
         8   -> uprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      16  ?_0
       8  ?_1
       8  ?_10
      12  ?_11
       4  ?_12
       8  ?_2
       8  ?_3
       8  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
     554  TaskDispEvtProcess
      54  TaskInitDisp
     268  comm_mtr_err_judye
       4  comm_mtr_err_times
       1  disflg
       1  mode
       1  times

 
   7 bytes in section .bss
 112 bytes in section .rodata
 952 bytes in section .text
 
 952 bytes of CODE  memory
 112 bytes of CONST memory
   7 bytes of DATA  memory

Errors: none
Warnings: none
